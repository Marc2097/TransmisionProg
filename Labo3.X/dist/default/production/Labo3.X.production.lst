

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 17:04:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F458 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     
    67                           	psect	idataBANK0
    68   000A0A                     __pidataBANK0:
    69                           	callstack 0
    70                           
    71                           ;initializer for _matCGRAM
    72   000A0A  08                 	db	8
    73   000A0B  04                 	db	4
    74   000A0C  04                 	db	4
    75   000A0D  0A                 	db	10
    76   000A0E  11                 	db	17
    77   000A0F  1F                 	db	31
    78   000A10  11                 	db	17
    79   000A11  00                 	db	0
    80   000A12  02                 	db	2
    81   000A13  04                 	db	4
    82   000A14  0E                 	db	14
    83   000A15  11                 	db	17
    84   000A16  1F                 	db	31
    85   000A17  10                 	db	16
    86   000A18  0E                 	db	14
    87   000A19  00                 	db	0
    88   000A1A  02                 	db	2
    89   000A1B  04                 	db	4
    90   000A1C  1F                 	db	31
    91   000A1D  10                 	db	16
    92   000A1E  1E                 	db	30
    93   000A1F  10                 	db	16
    94   000A20  1F                 	db	31
    95   000A21  00                 	db	0
    96   000A22  08                 	db	8
    97   000A23  04                 	db	4
    98   000A24  0E                 	db	14
    99   000A25  11                 	db	17
   100   000A26  1F                 	db	31
   101   000A27  10                 	db	16
   102   000A28  0E                 	db	14
   103   000A29  00                 	db	0
   104   000A2A  08                 	db	8
   105   000A2B  04                 	db	4
   106   000A2C  1F                 	db	31
   107   000A2D  10                 	db	16
   108   000A2E  1E                 	db	30
   109   000A2F  10                 	db	16
   110   000A30  1F                 	db	31
   111   000A31  00                 	db	0
   112   000A32  04                 	db	4
   113   000A33  0A                 	db	10
   114   000A34  0E                 	db	14
   115   000A35  11                 	db	17
   116   000A36  1F                 	db	31
   117   000A37  10                 	db	16
   118   000A38  0E                 	db	14
   119   000A39  00                 	db	0
   120   000A3A  08                 	db	8
   121   000A3B  04                 	db	4
   122   000A3C  0E                 	db	14
   123   000A3D  01                 	db	1
   124   000A3E  0F                 	db	15
   125   000A3F  11                 	db	17
   126   000A40  0F                 	db	15
   127   000A41  00                 	db	0
   128   000A42  04                 	db	4
   129   000A43  0A                 	db	10
   130   000A44  0E                 	db	14
   131   000A45  01                 	db	1
   132   000A46  0F                 	db	15
   133   000A47  11                 	db	17
   134   000A48  0F                 	db	15
   135   000A49  00                 	db	0
   136                           
   137                           ;initializer for _g_loto
   138   000A4A  01                 	db	1
   139   000A4B  02                 	db	2
   140   000A4C  03                 	db	3
   141   000A4D  04                 	db	4
   142                           
   143                           	psect	smallconst
   144   000600                     __psmallconst:
   145                           	callstack 0
   146   000600  00                 	db	0
   147   000601                     _msg:
   148                           	callstack 0
   149   000601  4C                 	db	76
   150   000602  61                 	db	97
   151   000603  62                 	db	98
   152   000604  33                 	db	51
   153   000605  20                 	db	32
   154   000606  4D                 	db	77
   155   000607  61                 	db	97
   156   000608  72                 	db	114
   157   000609  63                 	db	99
   158   00060A  47                 	db	71
   159   00060B  00                 	db	0
   160   00060C                     __end_of_msg:
   161                           	callstack 0
   162   000000                     _RCREG	set	4014
   163   000000                     _TXREG	set	4013
   164   000000                     _TRISC	set	3988
   165   000000                     _TRISD	set	3989
   166   000000                     _TRISB	set	3987
   167   000000                     _TRISCbits	set	3988
   168   000000                     _PORTAbits	set	3968
   169   000000                     _PORTA	set	3968
   170   000000                     _TRISA	set	3986
   171   000000                     _PORTBbits	set	3969
   172   000000                     _RCSTAbits	set	4011
   173   000000                     _TXSTAbits	set	4012
   174   000000                     _SPBRG	set	4015
   175   000000                     _ADCON1	set	4033
   176   000000                     _RCIF	set	31989
   177   000000                     _INTCON3bits	set	4080
   178   000000                     _INTCON2bits	set	4081
   179   000000                     _INTCONbits	set	4082
   180   00060C  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   000A4E                     __pcinit:
   186                           	callstack 0
   187   000A4E                     start_initialization:
   188                           	callstack 0
   189   000A4E                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Initialize objects allocated to BANK0 (68 bytes)
   193                           ; load TBLPTR registers with __pidataBANK0
   194   000A4E  0E0A               	movlw	low __pidataBANK0
   195   000A50  6EF6               	movwf	tblptrl,c
   196   000A52  0E0A               	movlw	high __pidataBANK0
   197   000A54  6EF7               	movwf	tblptrh,c
   198   000A56  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   199   000A58  6EF8               	movwf	tblptru,c
   200   000A5A  EE00  F060         	lfsr	0,__pdataBANK0
   201   000A5E  EE10 F044          	lfsr	1,68
   202   000A62                     copy_data0:
   203   000A62  0009               	tblrd		*+
   204   000A64  CFF5 FFEE          	movff	tablat,postinc0
   205   000A68  50E5               	movf	postdec1,w,c
   206   000A6A  50E1               	movf	fsr1l,w,c
   207   000A6C  E1FA               	bnz	copy_data0
   208                           
   209                           ; Clear objects allocated to BANK0 (6 bytes)
   210   000A6E  0100               	movlb	0
   211   000A70  6BB8               	clrf	(__pbssBANK0+5)& (0+255),b
   212   000A72  6BB7               	clrf	(__pbssBANK0+4)& (0+255),b
   213   000A74  6BB6               	clrf	(__pbssBANK0+3)& (0+255),b
   214   000A76  6BB5               	clrf	(__pbssBANK0+2)& (0+255),b
   215   000A78  6BB4               	clrf	(__pbssBANK0+1)& (0+255),b
   216   000A7A  6BB3               	clrf	__pbssBANK0& (0+255),b
   217   000A7C                     end_of_initialization:
   218                           	callstack 0
   219   000A7C                     __end_of__initialization:
   220                           	callstack 0
   221   000A7C  0100               	movlb	0
   222   000A7E  EF5A  F005         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssBANK0
   225   0000B3                     __pbssBANK0:
   226                           	callstack 0
   227   0000B3                     _g_mesChiffres:
   228                           	callstack 0
   229   0000B3                     	ds	4
   230   0000B7                     _g_indexChiffre:
   231                           	callstack 0
   232   0000B7                     	ds	2
   233                           
   234                           	psect	dataBANK0
   235   000060                     __pdataBANK0:
   236                           	callstack 0
   237   000060                     _matCGRAM:
   238                           	callstack 0
   239   000060                     	ds	64
   240   0000A0                     _g_loto:
   241                           	callstack 0
   242   0000A0                     	ds	4
   243                           
   244                           	psect	cstackBANK0
   245   0000A4                     __pcstackBANK0:
   246                           	callstack 0
   247   0000A4                     ??_lcd_ecrireDonnees:
   248   0000A4                     ??_lcd_busy:
   249   0000A4                     
   250                           ; 1 bytes @ 0x0
   251   0000A4                     	ds	1
   252   0000A5                     lcd_ecrireDonnees@donnee:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256   0000A5                     	ds	1
   257   0000A6                     ??_lcd_resetSequence:
   258   0000A6                     lcd_busy@adresse:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262   0000A6                     	ds	2
   263   0000A8                     ??_lcd_wrCom:
   264   0000A8                     lcd_wrData@caractere:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x4
   268   0000A8                     	ds	1
   269   0000A9                     lcd_wrCom@commande:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x5
   273   0000A9                     	ds	1
   274   0000AA                     ??_lcd_initCGRam:
   275   0000AA                     ??_lcd_ecritChar:
   276                           
   277                           ; 1 bytes @ 0x6
   278   0000AA                     	ds	2
   279   0000AC                     lcd_ecritChar@car:
   280                           	callstack 0
   281   0000AC                     lcd_initCGRam@i:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x8
   285   0000AC                     	ds	1
   286   0000AD                     lcd_ecritChar@posRam:
   287                           	callstack 0
   288   0000AD                     lcd_initCGRam@j:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x9
   292   0000AD                     	ds	1
   293   0000AE                     lcd_putMessage@chaine:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xA
   297   0000AE                     	ds	2
   298   0000B0                     ??_lcd_putMessage:
   299                           
   300                           ; 1 bytes @ 0xC
   301   0000B0                     	ds	2
   302   0000B2                     lcd_putMessage@j:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xE
   306   0000B2                     	ds	1
   307   0000B3                     
   308                           ; 1 bytes @ 0xF
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 41 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   328 ;;      Params:         0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels required when called: 6
   334 ;; This function calls:
   335 ;;		_init_serie
   336 ;;		_initialisation
   337 ;;		_lcd_init
   338 ;;		_lcd_putMessage
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text0
   345   000AB4                     __ptext0:
   346                           	callstack 0
   347   000AB4                     _main:
   348                           	callstack 25
   349   000AB4  FFFF               	dw	65535	; assembler added errata NOP
   350                           
   351                           ;main.c: 44:     initialisation();
   352   000AB6  EC6D  F005         	call	_initialisation	;wreg free
   353                           
   354                           ;main.c: 45:     init_serie();
   355   000ABA  EC7F  F005         	call	_init_serie	;wreg free
   356   000ABE                     
   357                           ;main.c: 46:     lcd_init();
   358   000ABE  EC41  F005         	call	_lcd_init	;wreg free
   359   000AC2                     
   360                           ;main.c: 47:     lcd_putMessage(msg);
   361   000AC2  0E01               	movlw	low _msg
   362   000AC4  0100               	movlb	0	; force () banked
   363   000AC6  6FAE               	movwf	lcd_putMessage@chaine& (0+255),b
   364   000AC8  0E06               	movlw	high _msg
   365   000ACA  6FAF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   366   000ACC  ECB0  F003         	call	_lcd_putMessage	;wreg free
   367   000AD0                     l135:
   368   000AD0  FFFF               	dw	65535	; assembler added errata NOP
   369   000AD2  EF68  F005         	goto	l135
   370   000AD6  EF01  F000         	goto	start
   371   000ADA                     __end_of_main:
   372                           	callstack 0
   373                           
   374 ;; *************** function _lcd_putMessage *****************
   375 ;; Defined at:
   376 ;;		line 386 in file "Lcd4Lignes.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  chaine          2   10[BANK0 ] PTR const unsigned char 
   379 ;;		 -> msg(11), 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  j               1   14[BANK0 ] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   391 ;;      Params:         0       2       0       0       0       0       0
   392 ;;      Locals:         0       1       0       0       0       0       0
   393 ;;      Temps:          0       2       0       0       0       0       0
   394 ;;      Totals:         0       5       0       0       0       0       0
   395 ;;Total ram usage:        5 bytes
   396 ;; Hardware stack levels used: 1
   397 ;; Hardware stack levels required when called: 4
   398 ;; This function calls:
   399 ;;		_lcd_ecritChar
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406   000760                     __ptext1:
   407                           	callstack 0
   408   000760                     _lcd_putMessage:
   409                           	callstack 0
   410   000760  FFFF               	dw	65535	; assembler added errata NOP
   411   000762                     
   412                           ;Lcd4Lignes.c: 386: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 387: 
      +                          {;Lcd4Lignes.c: 388:     unsigned char j;;Lcd4Lignes.c: 390:     for(j = 0; chaine[j] !=
      +                           0; j++)
   413   000762  0E00               	movlw	0
   414   000764  0100               	movlb	0	; force () banked
   415   000766  6FB2               	movwf	lcd_putMessage@j& (0+255),b
   416   000768  EFCE  F003         	goto	l1178
   417   00076C                     l1174:
   418   00076C  FFFF               	dw	65535	; assembler added errata NOP
   419                           
   420                           ; BSR set to: 0
   421                           ;Lcd4Lignes.c: 391:         lcd_ecritChar(chaine[j]);
   422   00076E  0100               	movlb	0	; force () banked
   423   000770  51B2               	movf	lcd_putMessage@j& (0+255),w,b
   424   000772  0100               	movlb	0	; force () banked
   425   000774  25AE               	addwf	lcd_putMessage@chaine& (0+255),w,b
   426   000776  0100               	movlb	0	; force () banked
   427   000778  6FB0               	movwf	??_lcd_putMessage& (0+255),b
   428   00077A  0E00               	movlw	0
   429   00077C  0100               	movlb	0	; force () banked
   430   00077E  21AF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   431   000780  0100               	movlb	0	; force () banked
   432   000782  6FB1               	movwf	(??_lcd_putMessage+1)& (0+255),b
   433   000784  C0B0  FFF6         	movff	??_lcd_putMessage,tblptrl
   434   000788  C0B1  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   435   00078C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   436   00078C  6AF8               	clrf	tblptru,c
   437   00078E                     	endif
   438   00078E                     	if	0	;tblptru may be non-zero
   439   00078E                     	endif
   440   00078E  0008               	tblrd		*
   441   000790  FFFF               	dw	65535	; errata NOP
   442   000792  50F5               	movf	tablat,w,c
   443   000794  ECEE  F003         	call	_lcd_ecritChar
   444   000798  0100               	movlb	0	; force () banked
   445   00079A  2BB2               	incf	lcd_putMessage@j& (0+255),f,b
   446   00079C                     l1178:
   447   00079C  FFFF               	dw	65535	; assembler added errata NOP
   448                           
   449                           ; BSR set to: 0
   450   00079E  0100               	movlb	0	; force () banked
   451   0007A0  51B2               	movf	lcd_putMessage@j& (0+255),w,b
   452   0007A2  0100               	movlb	0	; force () banked
   453   0007A4  25AE               	addwf	lcd_putMessage@chaine& (0+255),w,b
   454   0007A6  0100               	movlb	0	; force () banked
   455   0007A8  6FB0               	movwf	??_lcd_putMessage& (0+255),b
   456   0007AA  0E00               	movlw	0
   457   0007AC  0100               	movlb	0	; force () banked
   458   0007AE  21AF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   459   0007B0  0100               	movlb	0	; force () banked
   460   0007B2  6FB1               	movwf	(??_lcd_putMessage+1)& (0+255),b
   461   0007B4  C0B0  FFF6         	movff	??_lcd_putMessage,tblptrl
   462   0007B8  C0B1  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   463   0007BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   464   0007BC  6AF8               	clrf	tblptru,c
   465   0007BE                     	endif
   466   0007BE                     	if	0	;tblptru may be non-zero
   467   0007BE                     	endif
   468   0007BE  0008               	tblrd		*
   469   0007C0  FFFF               	dw	65535	; errata NOP
   470   0007C2  50F5               	movf	tablat,w,c
   471   0007C4  0900               	iorlw	0
   472   0007C6  A4D8               	btfss	status,2,c
   473   0007C8  EFE8  F003         	goto	u151
   474   0007CC  EFEB  F003         	goto	u150
   475   0007D0                     u151:
   476   0007D0  FFFF               	dw	65535	; assembler added errata NOP
   477   0007D2  EFB6  F003         	goto	l1174
   478   0007D6                     u150:
   479   0007D6  FFFF               	dw	65535	; assembler added errata NOP
   480   0007D8                     
   481                           ; BSR set to: 0
   482   0007D8  0012               	return		;funcret
   483   0007DA  FFFF               	dw	65535	; errata NOP
   484   0007DC                     __end_of_lcd_putMessage:
   485                           	callstack 0
   486                           
   487 ;; *************** function _lcd_ecritChar *****************
   488 ;; Defined at:
   489 ;;		line 358 in file "Lcd4Lignes.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  car             1    wreg     unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  car             1    8[BANK0 ] unsigned char 
   494 ;;  posRam          1    9[BANK0 ] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       2       0       0       0       0       0
   506 ;;      Temps:          0       2       0       0       0       0       0
   507 ;;      Totals:         0       4       0       0       0       0       0
   508 ;;Total ram usage:        4 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 3
   511 ;; This function calls:
   512 ;;		_lcd_wrCom
   513 ;;		_lcd_wrData
   514 ;; This function is called by:
   515 ;;		_lcd_putMessage
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text2
   520   0007DC                     __ptext2:
   521                           	callstack 0
   522   0007DC                     _lcd_ecritChar:
   523                           	callstack 0
   524   0007DC  FFFF               	dw	65535	; assembler added errata NOP
   525                           
   526                           ; BSR set to: 0
   527                           ;incstack = 0
   528                           ;lcd_ecritChar@car stored from wreg
   529   0007DE  0100               	movlb	0	; force () banked
   530   0007E0  6FAC               	movwf	lcd_ecritChar@car& (0+255),b
   531   0007E2                     
   532                           ;Lcd4Lignes.c: 358: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 359: {;Lcd4Ligne
      +                          s.c: 360:     unsigned char posRam;;Lcd4Lignes.c: 362:     posRam = lcd_wrData(car);
   533   0007E2  0100               	movlb	0	; force () banked
   534   0007E4  51AC               	movf	lcd_ecritChar@car& (0+255),w,b
   535   0007E6  ECD9  F004         	call	_lcd_wrData
   536   0007EA  0100               	movlb	0	; force () banked
   537   0007EC  6FAD               	movwf	lcd_ecritChar@posRam& (0+255),b
   538                           
   539                           ;Lcd4Lignes.c: 363:     switch(posRam)
   540   0007EE  EF0B  F004         	goto	l1028
   541   0007F2                     l1020:
   542   0007F2  FFFF               	dw	65535	; assembler added errata NOP
   543                           
   544                           ; BSR set to: 0
   545                           ;Lcd4Lignes.c: 366:             lcd_wrCom(0x40|0x80);
   546   0007F4  0EC0               	movlw	192
   547   0007F6  EC62  F003         	call	_lcd_wrCom
   548                           
   549                           ;Lcd4Lignes.c: 367:             break;
   550   0007FA  EF28  F004         	goto	l78
   551   0007FE                     l1022:
   552   0007FE  FFFF               	dw	65535	; assembler added errata NOP
   553                           
   554                           ; BSR set to: 0
   555                           ;Lcd4Lignes.c: 369:             lcd_wrCom(0x14|0x80);
   556   000800  0E94               	movlw	148
   557   000802  EC62  F003         	call	_lcd_wrCom
   558                           
   559                           ;Lcd4Lignes.c: 370:             break;
   560   000806  EF28  F004         	goto	l78
   561   00080A                     l1024:
   562   00080A  FFFF               	dw	65535	; assembler added errata NOP
   563                           
   564                           ; BSR set to: 0
   565                           ;Lcd4Lignes.c: 372:             lcd_wrCom(0x54|0x80);
   566   00080C  0ED4               	movlw	212
   567   00080E  EC62  F003         	call	_lcd_wrCom
   568                           
   569                           ;Lcd4Lignes.c: 373:             break;
   570   000812  EF28  F004         	goto	l78
   571   000816                     l1028:
   572   000816  FFFF               	dw	65535	; assembler added errata NOP
   573                           
   574                           ; BSR set to: 0
   575   000818  0100               	movlb	0	; force () banked
   576   00081A  51AD               	movf	lcd_ecritChar@posRam& (0+255),w,b
   577   00081C  0100               	movlb	0	; force () banked
   578   00081E  6FAA               	movwf	??_lcd_ecritChar& (0+255),b
   579   000820  6BAB               	clrf	(??_lcd_ecritChar+1)& (0+255),b
   580                           
   581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   582                           ; Switch size 1, requested type "simple"
   583                           ; Number of cases is 1, Range of values is 0 to 0
   584                           ; switch strategies available:
   585                           ; Name         Instructions Cycles
   586                           ; simple_byte            4     3 (average)
   587                           ;	Chosen strategy is simple_byte
   588   000822  51AB               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
   589   000824  0A00               	xorlw	0	; case 0
   590   000826  B4D8               	btfsc	status,2,c
   591   000828  EF18  F004         	goto	l1206
   592   00082C  EF28  F004         	goto	l78
   593   000830                     l1206:
   594   000830  FFFF               	dw	65535	; assembler added errata NOP
   595                           
   596                           ; BSR set to: 0
   597                           ; Switch size 1, requested type "simple"
   598                           ; Number of cases is 3, Range of values is 20 to 84
   599                           ; switch strategies available:
   600                           ; Name         Instructions Cycles
   601                           ; simple_byte           10     6 (average)
   602                           ;	Chosen strategy is simple_byte
   603   000832  51AA               	movf	??_lcd_ecritChar& (0+255),w,b
   604   000834  0A14               	xorlw	20	; case 20
   605   000836  B4D8               	btfsc	status,2,c
   606   000838  EFF9  F003         	goto	l1020
   607   00083C  0A54               	xorlw	84	; case 64
   608   00083E  B4D8               	btfsc	status,2,c
   609   000840  EF05  F004         	goto	l1024
   610   000844  0A14               	xorlw	20	; case 84
   611   000846  B4D8               	btfsc	status,2,c
   612   000848  EFFF  F003         	goto	l1022
   613   00084C  EF28  F004         	goto	l78
   614   000850                     l78:
   615   000850  FFFF               	dw	65535	; assembler added errata NOP
   616   000852  0012               	return		;funcret
   617   000854  FFFF               	dw	65535	; errata NOP
   618   000856                     __end_of_lcd_ecritChar:
   619                           	callstack 0
   620                           
   621 ;; *************** function _lcd_init *****************
   622 ;; Defined at:
   623 ;;		line 257 in file "Lcd4Lignes.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   637 ;;      Params:         0       0       0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 5
   644 ;; This function calls:
   645 ;;		_lcd_initCGRam
   646 ;;		_lcd_resetSequence
   647 ;;		_lcd_wrCom
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text3
   654   000A82                     __ptext3:
   655                           	callstack 0
   656   000A82                     _lcd_init:
   657                           	callstack 0
   658   000A82  FFFF               	dw	65535	; assembler added errata NOP
   659   000A84                     
   660                           ;Lcd4Lignes.c: 259:     TRISB = TRISB & 0xEF;
   661   000A84  5093               	movf	147,w,c	;volatile
   662   000A86  0BEF               	andlw	239
   663   000A88  6E93               	movwf	147,c	;volatile
   664   000A8A                     
   665                           ;Lcd4Lignes.c: 260:     lcd_resetSequence();
   666   000A8A  ECA2  F004         	call	_lcd_resetSequence	;wreg free
   667   000A8E                     
   668                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x28);
   669   000A8E  0E28               	movlw	40
   670   000A90  EC62  F003         	call	_lcd_wrCom
   671   000A94                     
   672                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x0F);
   673   000A94  0E0F               	movlw	15
   674   000A96  EC62  F003         	call	_lcd_wrCom
   675   000A9A                     
   676                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x01);
   677   000A9A  0E01               	movlw	1
   678   000A9C  EC62  F003         	call	_lcd_wrCom
   679   000AA0                     
   680                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x06);
   681   000AA0  0E06               	movlw	6
   682   000AA2  EC62  F003         	call	_lcd_wrCom
   683   000AA6                     
   684                           ;Lcd4Lignes.c: 265:     lcd_wrCom(0x80);
   685   000AA6  0E80               	movlw	128
   686   000AA8  EC62  F003         	call	_lcd_wrCom
   687   000AAC                     
   688                           ;Lcd4Lignes.c: 266:     lcd_initCGRam();
   689   000AAC  EC07  F003         	call	_lcd_initCGRam	;wreg free
   690   000AB0  0012               	return		;funcret
   691   000AB2  FFFF               	dw	65535	; errata NOP
   692   000AB4                     __end_of_lcd_init:
   693                           	callstack 0
   694                           
   695 ;; *************** function _lcd_resetSequence *****************
   696 ;; Defined at:
   697 ;;		line 220 in file "Lcd4Lignes.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   711 ;;      Params:         0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0
   713 ;;      Temps:          0       1       0       0       0       0       0
   714 ;;      Totals:         0       1       0       0       0       0       0
   715 ;;Total ram usage:        1 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 1
   718 ;; This function calls:
   719 ;;		_lcd_ecrireDonnees
   720 ;;		_lcd_strobeEnableBit
   721 ;; This function is called by:
   722 ;;		_lcd_init
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text4
   727   000944                     __ptext4:
   728                           	callstack 0
   729   000944                     _lcd_resetSequence:
   730                           	callstack 0
   731   000944  FFFF               	dw	65535	; assembler added errata NOP
   732   000946                     
   733                           ;Lcd4Lignes.c: 225:     TRISA = 0b00000000;
   734   000946  0E00               	movlw	0
   735   000948  6E92               	movwf	146,c	;volatile
   736   00094A                     
   737                           ;Lcd4Lignes.c: 227:     _delay((unsigned long)((40)*(16000000/4000.0)));
   738   00094A  0E9C               	movlw	156
   739   00094C  0100               	movlb	0	; force () banked
   740   00094E  6FA6               	movwf	??_lcd_resetSequence& (0+255),b
   741   000950  0EF1               	movlw	241
   742   000952                     u167:
   743   000952  FFFF               	dw	65535	; errata NOP
   744   000954  2EE8               	decfsz	wreg,f,c
   745   000956  D7FD               	bra	u167
   746   000958  2FA6               	decfsz	??_lcd_resetSequence& (0+255),f,b
   747   00095A  D7FB               	bra	u167
   748   00095C  F000               	nop	
   749   00095E                     
   750                           ;Lcd4Lignes.c: 228:     PORTBbits.RB4 = 0;
   751   00095E  9881               	bcf	129,4,c	;volatile
   752   000960                     
   753                           ;Lcd4Lignes.c: 229:     PORTAbits.RA5 = 0;
   754   000960  9A80               	bcf	128,5,c	;volatile
   755   000962                     
   756                           ;Lcd4Lignes.c: 231:     lcd_ecrireDonnees(0x03);
   757   000962  0E03               	movlw	3
   758   000964  EC2B  F004         	call	_lcd_ecrireDonnees
   759   000968                     
   760                           ;Lcd4Lignes.c: 232:     lcd_strobeEnableBit();
   761   000968  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
   762   00096C                     
   763                           ;Lcd4Lignes.c: 233:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   764   00096C  0E28               	movlw	40
   765   00096E                     u177:
   766   00096E  FFFF               	dw	65535	; errata NOP
   767   000970  2EE8               	decfsz	wreg,f,c
   768   000972  D7FD               	bra	u177
   769   000974                     
   770                           ;Lcd4Lignes.c: 236:     lcd_ecrireDonnees(0x03);
   771   000974  0E03               	movlw	3
   772   000976  EC2B  F004         	call	_lcd_ecrireDonnees
   773   00097A                     
   774                           ;Lcd4Lignes.c: 237:     lcd_strobeEnableBit();
   775   00097A  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
   776   00097E                     
   777                           ;Lcd4Lignes.c: 238:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   778   00097E  0E28               	movlw	40
   779   000980                     u187:
   780   000980  FFFF               	dw	65535	; errata NOP
   781   000982  2EE8               	decfsz	wreg,f,c
   782   000984  D7FD               	bra	u187
   783   000986                     
   784                           ;Lcd4Lignes.c: 240:     lcd_ecrireDonnees(0x03);
   785   000986  0E03               	movlw	3
   786   000988  EC2B  F004         	call	_lcd_ecrireDonnees
   787   00098C                     
   788                           ;Lcd4Lignes.c: 241:     lcd_strobeEnableBit();
   789   00098C  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
   790   000990                     
   791                           ;Lcd4Lignes.c: 242:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   792   000990  0E28               	movlw	40
   793   000992                     u197:
   794   000992  FFFF               	dw	65535	; errata NOP
   795   000994  2EE8               	decfsz	wreg,f,c
   796   000996  D7FD               	bra	u197
   797   000998                     
   798                           ;Lcd4Lignes.c: 244:     lcd_ecrireDonnees(0x02);
   799   000998  0E02               	movlw	2
   800   00099A  EC2B  F004         	call	_lcd_ecrireDonnees
   801   00099E                     
   802                           ;Lcd4Lignes.c: 245:     lcd_strobeEnableBit();
   803   00099E  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
   804   0009A2                     
   805                           ;Lcd4Lignes.c: 246:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   806   0009A2  0E28               	movlw	40
   807   0009A4                     u207:
   808   0009A4  FFFF               	dw	65535	; errata NOP
   809   0009A6  2EE8               	decfsz	wreg,f,c
   810   0009A8  D7FD               	bra	u207
   811   0009AA                     
   812                           ;Lcd4Lignes.c: 248:     TRISA = 0b00001111;
   813   0009AA  0E0F               	movlw	15
   814   0009AC  6E92               	movwf	146,c	;volatile
   815   0009AE  0012               	return		;funcret
   816   0009B0  FFFF               	dw	65535	; errata NOP
   817   0009B2                     __end_of_lcd_resetSequence:
   818                           	callstack 0
   819                           
   820 ;; *************** function _lcd_initCGRam *****************
   821 ;; Defined at:
   822 ;;		line 416 in file "Lcd4Lignes.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  j               1    9[BANK0 ] unsigned char 
   827 ;;  i               1    8[BANK0 ] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   837 ;;      Params:         0       0       0       0       0       0       0
   838 ;;      Locals:         0       2       0       0       0       0       0
   839 ;;      Temps:          0       2       0       0       0       0       0
   840 ;;      Totals:         0       4       0       0       0       0       0
   841 ;;Total ram usage:        4 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 4
   844 ;; This function calls:
   845 ;;		_lcd_curseurHome
   846 ;;		_lcd_wrCom
   847 ;;		_lcd_wrData
   848 ;; This function is called by:
   849 ;;		_lcd_init
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text5
   854   00060E                     __ptext5:
   855                           	callstack 0
   856   00060E                     _lcd_initCGRam:
   857                           	callstack 0
   858   00060E  FFFF               	dw	65535	; assembler added errata NOP
   859   000610                     
   860                           ;Lcd4Lignes.c: 418:     char i,j;;Lcd4Lignes.c: 420:     lcd_wrCom(0x40);
   861   000610  0E40               	movlw	64
   862   000612  EC62  F003         	call	_lcd_wrCom
   863   000616                     
   864                           ;Lcd4Lignes.c: 421:     for(i=0;i<8;i++)
   865   000616  0E00               	movlw	0
   866   000618  0100               	movlb	0	; force () banked
   867   00061A  6FAC               	movwf	lcd_initCGRam@i& (0+255),b
   868   00061C                     
   869                           ; BSR set to: 0
   870   00061C  0E07               	movlw	7
   871   00061E  0100               	movlb	0	; force () banked
   872   000620  65AC               	cpfsgt	lcd_initCGRam@i& (0+255),b
   873   000622  EF15  F003         	goto	u41
   874   000626  EF18  F003         	goto	u40
   875   00062A                     u41:
   876   00062A  FFFF               	dw	65535	; assembler added errata NOP
   877   00062C  EF1B  F003         	goto	l1000
   878   000630                     u40:
   879   000630  FFFF               	dw	65535	; assembler added errata NOP
   880   000632  EF5D  F003         	goto	l1016
   881   000636                     l1000:
   882   000636  FFFF               	dw	65535	; assembler added errata NOP
   883                           
   884                           ; BSR set to: 0
   885                           ;Lcd4Lignes.c: 422:     {;Lcd4Lignes.c: 423:         for(j=0;j<8;j++)
   886   000638  0E00               	movlw	0
   887   00063A  0100               	movlb	0	; force () banked
   888   00063C  6FAD               	movwf	lcd_initCGRam@j& (0+255),b
   889   00063E                     
   890                           ; BSR set to: 0
   891   00063E  0E07               	movlw	7
   892   000640  0100               	movlb	0	; force () banked
   893   000642  65AD               	cpfsgt	lcd_initCGRam@j& (0+255),b
   894   000644  EF26  F003         	goto	u51
   895   000648  EF29  F003         	goto	u50
   896   00064C                     u51:
   897   00064C  FFFF               	dw	65535	; assembler added errata NOP
   898   00064E  EF2C  F003         	goto	l1006
   899   000652                     u50:
   900   000652  FFFF               	dw	65535	; assembler added errata NOP
   901   000654  EF50  F003         	goto	l1012
   902   000658                     l1006:
   903   000658  FFFF               	dw	65535	; assembler added errata NOP
   904                           
   905                           ; BSR set to: 0
   906                           ;Lcd4Lignes.c: 424:             lcd_wrData(matCGRAM[i][j]);
   907   00065A  0100               	movlb	0	; force () banked
   908   00065C  51AC               	movf	lcd_initCGRam@i& (0+255),w,b
   909   00065E  0D08               	mullw	8
   910   000660  0E60               	movlw	low _matCGRAM
   911   000662  24F3               	addwf	243,w,c
   912   000664  0100               	movlb	0	; force () banked
   913   000666  6FAA               	movwf	??_lcd_initCGRam& (0+255),b
   914   000668  0E00               	movlw	high _matCGRAM
   915   00066A  20F4               	addwfc	prodh,w,c
   916   00066C  6FAB               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   917   00066E  0100               	movlb	0	; force () banked
   918   000670  51AD               	movf	lcd_initCGRam@j& (0+255),w,b
   919   000672  0100               	movlb	0	; force () banked
   920   000674  25AA               	addwf	??_lcd_initCGRam& (0+255),w,b
   921   000676  6ED9               	movwf	fsr2l,c
   922   000678  0100               	movlb	0	; force () banked
   923   00067A  0E00               	movlw	0
   924   00067C  0100               	movlb	0	; force () banked
   925   00067E  21AB               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   926   000680  6EDA               	movwf	fsr2h,c
   927   000682  50DF               	movf	indf2,w,c
   928   000684  ECD9  F004         	call	_lcd_wrData
   929   000688  0100               	movlb	0	; force () banked
   930   00068A  2BAD               	incf	lcd_initCGRam@j& (0+255),f,b
   931   00068C                     
   932                           ; BSR set to: 0
   933   00068C  0E07               	movlw	7
   934   00068E  0100               	movlb	0	; force () banked
   935   000690  65AD               	cpfsgt	lcd_initCGRam@j& (0+255),b
   936   000692  EF4D  F003         	goto	u61
   937   000696  EF50  F003         	goto	u60
   938   00069A                     u61:
   939   00069A  FFFF               	dw	65535	; assembler added errata NOP
   940   00069C  EF2C  F003         	goto	l1006
   941   0006A0                     u60:
   942   0006A0                     l1012:
   943   0006A0  FFFF               	dw	65535	; assembler added errata NOP
   944                           
   945                           ; BSR set to: 0
   946                           ;Lcd4Lignes.c: 425:     }
   947   0006A2  0100               	movlb	0	; force () banked
   948   0006A4  2BAC               	incf	lcd_initCGRam@i& (0+255),f,b
   949   0006A6                     
   950                           ; BSR set to: 0
   951   0006A6  0E07               	movlw	7
   952   0006A8  0100               	movlb	0	; force () banked
   953   0006AA  65AC               	cpfsgt	lcd_initCGRam@i& (0+255),b
   954   0006AC  EF5A  F003         	goto	u71
   955   0006B0  EF5D  F003         	goto	u70
   956   0006B4                     u71:
   957   0006B4  FFFF               	dw	65535	; assembler added errata NOP
   958   0006B6  EF1B  F003         	goto	l1000
   959   0006BA                     u70:
   960   0006BA                     l1016:
   961   0006BA  FFFF               	dw	65535	; assembler added errata NOP
   962                           
   963                           ; BSR set to: 0
   964                           ;Lcd4Lignes.c: 426:     lcd_curseurHome();
   965   0006BC  EC8B  F005         	call	_lcd_curseurHome	;wreg free
   966   0006C0  0012               	return		;funcret
   967   0006C2  FFFF               	dw	65535	; errata NOP
   968   0006C4                     __end_of_lcd_initCGRam:
   969                           	callstack 0
   970                           
   971 ;; *************** function _lcd_wrData *****************
   972 ;; Defined at:
   973 ;;		line 187 in file "Lcd4Lignes.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  caractere       1    wreg     unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  caractere       1    4[BANK0 ] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      unsigned char 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   987 ;;      Params:         0       0       0       0       0       0       0
   988 ;;      Locals:         0       1       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0
   990 ;;      Totals:         0       1       0       0       0       0       0
   991 ;;Total ram usage:        1 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 2
   994 ;; This function calls:
   995 ;;		_lcd_busy
   996 ;;		_lcd_ecrireDonnees
   997 ;;		_lcd_strobeEnableBit
   998 ;; This function is called by:
   999 ;;		_lcd_ecritChar
  1000 ;;		_lcd_initCGRam
  1001 ;;		_lcd_effaceChar
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text6
  1006   0009B2                     __ptext6:
  1007                           	callstack 0
  1008   0009B2                     _lcd_wrData:
  1009                           	callstack 0
  1010   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  1011                           
  1012                           ;incstack = 0
  1013                           ;lcd_wrData@caractere stored from wreg
  1014   0009B4  0100               	movlb	0	; force () banked
  1015   0009B6  6FA8               	movwf	lcd_wrData@caractere& (0+255),b
  1016   0009B8                     
  1017                           ;Lcd4Lignes.c: 187: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 188: {;Lcd4Lignes.c: 189:     lcd_busy();
  1018   0009B8  EC67  F004         	call	_lcd_busy	;wreg free
  1019   0009BC                     
  1020                           ;Lcd4Lignes.c: 190:     TRISA = 0b00000000;
  1021   0009BC  0E00               	movlw	0
  1022   0009BE  6E92               	movwf	146,c	;volatile
  1023   0009C0                     
  1024                           ;Lcd4Lignes.c: 191:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1025   0009C0  D000               	nop2		;2 cycle nop
  1026   0009C2  D000               	nop2		;2 cycle nop
  1027   0009C4  D000               	nop2		;2 cycle nop
  1028   0009C6  D000               	nop2		;2 cycle nop
  1029   0009C8                     
  1030                           ;Lcd4Lignes.c: 193:     PORTBbits.RB4 = 1;
  1031   0009C8  8881               	bsf	129,4,c	;volatile
  1032   0009CA                     
  1033                           ;Lcd4Lignes.c: 194:     PORTAbits.RA5 = 0;
  1034   0009CA  9A80               	bcf	128,5,c	;volatile
  1035   0009CC                     
  1036                           ;Lcd4Lignes.c: 196:     lcd_ecrireDonnees(caractere >> 4);
  1037   0009CC  0100               	movlb	0	; force () banked
  1038   0009CE  39A8               	swapf	lcd_wrData@caractere& (0+255),w,b
  1039   0009D0  0B0F               	andlw	15
  1040   0009D2  EC2B  F004         	call	_lcd_ecrireDonnees
  1041   0009D6                     
  1042                           ;Lcd4Lignes.c: 197:     lcd_strobeEnableBit();
  1043   0009D6  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
  1044   0009DA                     
  1045                           ;Lcd4Lignes.c: 198:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1046   0009DA  D000               	nop2		;2 cycle nop
  1047   0009DC  D000               	nop2		;2 cycle nop
  1048   0009DE  D000               	nop2		;2 cycle nop
  1049   0009E0  D000               	nop2		;2 cycle nop
  1050   0009E2                     
  1051                           ;Lcd4Lignes.c: 200:     lcd_ecrireDonnees(caractere);
  1052   0009E2  0100               	movlb	0	; force () banked
  1053   0009E4  51A8               	movf	lcd_wrData@caractere& (0+255),w,b
  1054   0009E6  EC2B  F004         	call	_lcd_ecrireDonnees
  1055   0009EA                     
  1056                           ;Lcd4Lignes.c: 201:     lcd_strobeEnableBit();
  1057   0009EA  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
  1058   0009EE                     
  1059                           ;Lcd4Lignes.c: 202:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1060   0009EE  D000               	nop2		;2 cycle nop
  1061   0009F0  D000               	nop2		;2 cycle nop
  1062   0009F2  D000               	nop2		;2 cycle nop
  1063   0009F4  D000               	nop2		;2 cycle nop
  1064   0009F6                     
  1065                           ;Lcd4Lignes.c: 204:     TRISA = 0b00001111;
  1066   0009F6  0E0F               	movlw	15
  1067   0009F8  6E92               	movwf	146,c	;volatile
  1068   0009FA                     
  1069                           ;Lcd4Lignes.c: 205:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1070   0009FA  D000               	nop2		;2 cycle nop
  1071   0009FC  D000               	nop2		;2 cycle nop
  1072   0009FE  D000               	nop2		;2 cycle nop
  1073   000A00  D000               	nop2		;2 cycle nop
  1074                           
  1075                           ;Lcd4Lignes.c: 206:     return(lcd_busy());
  1076   000A02  EC67  F004         	call	_lcd_busy	;wreg free
  1077   000A06  0012               	return		;funcret
  1078   000A08  FFFF               	dw	65535	; errata NOP
  1079   000A0A                     __end_of_lcd_wrData:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _lcd_curseurHome *****************
  1083 ;; Defined at:
  1084 ;;		line 287 in file "Lcd4Lignes.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1098 ;;      Params:         0       0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 3
  1105 ;; This function calls:
  1106 ;;		_lcd_wrCom
  1107 ;; This function is called by:
  1108 ;;		_lcd_initCGRam
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text7
  1113   000B16                     __ptext7:
  1114                           	callstack 0
  1115   000B16                     _lcd_curseurHome:
  1116                           	callstack 0
  1117   000B16  FFFF               	dw	65535	; assembler added errata NOP
  1118   000B18                     
  1119                           ;Lcd4Lignes.c: 289:     lcd_wrCom(0x02);
  1120   000B18  0E02               	movlw	2
  1121   000B1A  EC62  F003         	call	_lcd_wrCom
  1122   000B1E  0012               	return		;funcret
  1123   000B20  FFFF               	dw	65535	; errata NOP
  1124   000B22                     __end_of_lcd_curseurHome:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _lcd_wrCom *****************
  1128 ;; Defined at:
  1129 ;;		line 155 in file "Lcd4Lignes.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  commande        1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  commande        1    5[BANK0 ] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      unsigned char 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         0       0       0       0       0       0       0
  1144 ;;      Locals:         0       1       0       0       0       0       0
  1145 ;;      Temps:          0       1       0       0       0       0       0
  1146 ;;      Totals:         0       2       0       0       0       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		_lcd_busy
  1152 ;;		_lcd_ecrireDonnees
  1153 ;;		_lcd_strobeEnableBit
  1154 ;; This function is called by:
  1155 ;;		_lcd_init
  1156 ;;		_lcd_curseurHome
  1157 ;;		_lcd_ecritChar
  1158 ;;		_lcd_initCGRam
  1159 ;;		_lcd_effaceAffichage
  1160 ;;		_lcd_gotoXY
  1161 ;;		_lcd_cacheCurseur
  1162 ;;		_lcd_montreCurseur
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text8
  1167   0006C4                     __ptext8:
  1168                           	callstack 0
  1169   0006C4                     _lcd_wrCom:
  1170                           	callstack 0
  1171   0006C4  FFFF               	dw	65535	; assembler added errata NOP
  1172                           
  1173                           ;incstack = 0
  1174                           ;lcd_wrCom@commande stored from wreg
  1175   0006C6  0100               	movlb	0	; force () banked
  1176   0006C8  6FA9               	movwf	lcd_wrCom@commande& (0+255),b
  1177   0006CA                     
  1178                           ;Lcd4Lignes.c: 155: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           156: {;Lcd4Lignes.c: 157:     lcd_busy();
  1179   0006CA  EC67  F004         	call	_lcd_busy	;wreg free
  1180   0006CE                     
  1181                           ;Lcd4Lignes.c: 159:     TRISA = 0b00000000;
  1182   0006CE  0E00               	movlw	0
  1183   0006D0  6E92               	movwf	146,c	;volatile
  1184   0006D2                     
  1185                           ;Lcd4Lignes.c: 160:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1186   0006D2  D000               	nop2		;2 cycle nop
  1187   0006D4  D000               	nop2		;2 cycle nop
  1188   0006D6  D000               	nop2		;2 cycle nop
  1189   0006D8  D000               	nop2		;2 cycle nop
  1190   0006DA                     
  1191                           ;Lcd4Lignes.c: 162:     PORTBbits.RB4 = 0;
  1192   0006DA  9881               	bcf	129,4,c	;volatile
  1193   0006DC                     
  1194                           ;Lcd4Lignes.c: 163:     PORTAbits.RA5 = 0;
  1195   0006DC  9A80               	bcf	128,5,c	;volatile
  1196   0006DE                     
  1197                           ;Lcd4Lignes.c: 165:     lcd_ecrireDonnees(commande >> 4);
  1198   0006DE  0100               	movlb	0	; force () banked
  1199   0006E0  39A9               	swapf	lcd_wrCom@commande& (0+255),w,b
  1200   0006E2  0B0F               	andlw	15
  1201   0006E4  EC2B  F004         	call	_lcd_ecrireDonnees
  1202   0006E8                     
  1203                           ;Lcd4Lignes.c: 166:     lcd_strobeEnableBit();
  1204   0006E8  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
  1205   0006EC                     
  1206                           ;Lcd4Lignes.c: 167:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1207   0006EC  D000               	nop2		;2 cycle nop
  1208   0006EE  D000               	nop2		;2 cycle nop
  1209   0006F0  D000               	nop2		;2 cycle nop
  1210   0006F2  D000               	nop2		;2 cycle nop
  1211   0006F4                     
  1212                           ;Lcd4Lignes.c: 169:     lcd_ecrireDonnees(commande);
  1213   0006F4  0100               	movlb	0	; force () banked
  1214   0006F6  51A9               	movf	lcd_wrCom@commande& (0+255),w,b
  1215   0006F8  EC2B  F004         	call	_lcd_ecrireDonnees
  1216   0006FC                     
  1217                           ;Lcd4Lignes.c: 170:     lcd_strobeEnableBit();
  1218   0006FC  EC91  F005         	call	_lcd_strobeEnableBit	;wreg free
  1219   000700                     
  1220                           ;Lcd4Lignes.c: 171:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1221   000700  0E28               	movlw	40
  1222   000702                     u217:
  1223   000702  FFFF               	dw	65535	; errata NOP
  1224   000704  2EE8               	decfsz	wreg,f,c
  1225   000706  D7FD               	bra	u217
  1226   000708                     
  1227                           ;Lcd4Lignes.c: 173:     if ((commande == 0x01) || commande == 0x02)
  1228   000708  0100               	movlb	0	; force () banked
  1229   00070A  05A9               	decf	lcd_wrCom@commande& (0+255),w,b
  1230   00070C  B4D8               	btfsc	status,2,c
  1231   00070E  EF8B  F003         	goto	u21
  1232   000712  EF8E  F003         	goto	u20
  1233   000716                     u21:
  1234   000716  FFFF               	dw	65535	; assembler added errata NOP
  1235   000718  EF9A  F003         	goto	l918
  1236   00071C                     u20:
  1237   00071C  FFFF               	dw	65535	; assembler added errata NOP
  1238   00071E                     
  1239                           ; BSR set to: 0
  1240   00071E  0E02               	movlw	2
  1241   000720  0100               	movlb	0	; force () banked
  1242   000722  19A9               	xorwf	lcd_wrCom@commande& (0+255),w,b
  1243   000724  A4D8               	btfss	status,2,c
  1244   000726  EF97  F003         	goto	u31
  1245   00072A  EF9A  F003         	goto	u30
  1246   00072E                     u31:
  1247   00072E  FFFF               	dw	65535	; assembler added errata NOP
  1248   000730  EFA5  F003         	goto	l920
  1249   000734                     u30:
  1250   000734                     l918:
  1251   000734  FFFF               	dw	65535	; assembler added errata NOP
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;Lcd4Lignes.c: 174:         _delay((unsigned long)((2)*(16000000/4000.0)));
  1255   000736  0E08               	movlw	8
  1256   000738  0100               	movlb	0	; force () banked
  1257   00073A  6FA8               	movwf	??_lcd_wrCom& (0+255),b
  1258   00073C  0ECB               	movlw	203
  1259   00073E                     u227:
  1260   00073E  FFFF               	dw	65535	; errata NOP
  1261   000740  2EE8               	decfsz	wreg,f,c
  1262   000742  D7FD               	bra	u227
  1263   000744  2FA8               	decfsz	??_lcd_wrCom& (0+255),f,b
  1264   000746  D7FB               	bra	u227
  1265   000748  F000               	nop	
  1266   00074A                     l920:
  1267   00074A  FFFF               	dw	65535	; assembler added errata NOP
  1268                           
  1269                           ;Lcd4Lignes.c: 176:     TRISA = 0b00001111;
  1270   00074C  0E0F               	movlw	15
  1271   00074E  6E92               	movwf	146,c	;volatile
  1272   000750                     
  1273                           ;Lcd4Lignes.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1274   000750  D000               	nop2		;2 cycle nop
  1275   000752  D000               	nop2		;2 cycle nop
  1276   000754  D000               	nop2		;2 cycle nop
  1277   000756  D000               	nop2		;2 cycle nop
  1278   000758                     
  1279                           ;Lcd4Lignes.c: 178:     return(lcd_busy());
  1280   000758  EC67  F004         	call	_lcd_busy	;wreg free
  1281   00075C  0012               	return		;funcret
  1282   00075E  FFFF               	dw	65535	; errata NOP
  1283   000760                     __end_of_lcd_wrCom:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _lcd_strobeEnableBit *****************
  1287 ;; Defined at:
  1288 ;;		line 430 in file "Lcd4Lignes.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		None
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1302 ;;      Params:         0       0       0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_lcd_wrCom
  1312 ;;		_lcd_wrData
  1313 ;;		_lcd_resetSequence
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text9
  1318   000B22                     __ptext9:
  1319                           	callstack 0
  1320   000B22                     _lcd_strobeEnableBit:
  1321                           	callstack 0
  1322   000B22  FFFF               	dw	65535	; assembler added errata NOP
  1323   000B24                     
  1324                           ;Lcd4Lignes.c: 432:     PORTAbits.RA4 = 1;
  1325   000B24  8880               	bsf	128,4,c	;volatile
  1326                           
  1327                           ;Lcd4Lignes.c: 433:     __nop();
  1328   000B26  F000               	nop	
  1329                           
  1330                           ;Lcd4Lignes.c: 434:     PORTAbits.RA4 = 0;
  1331   000B28  9880               	bcf	128,4,c	;volatile
  1332   000B2A  0012               	return		;funcret
  1333   000B2C  FFFF               	dw	65535	; errata NOP
  1334   000B2E                     __end_of_lcd_strobeEnableBit:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _lcd_ecrireDonnees *****************
  1338 ;; Defined at:
  1339 ;;		line 105 in file "Lcd4Lignes.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  donnee          1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  donnee          1    1[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1353 ;;      Params:         0       0       0       0       0       0       0
  1354 ;;      Locals:         0       1       0       0       0       0       0
  1355 ;;      Temps:          0       1       0       0       0       0       0
  1356 ;;      Totals:         0       2       0       0       0       0       0
  1357 ;;Total ram usage:        2 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_lcd_wrCom
  1363 ;;		_lcd_wrData
  1364 ;;		_lcd_resetSequence
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text10
  1369   000856                     __ptext10:
  1370                           	callstack 0
  1371   000856                     _lcd_ecrireDonnees:
  1372                           	callstack 0
  1373   000856  FFFF               	dw	65535	; assembler added errata NOP
  1374                           
  1375                           ;incstack = 0
  1376                           ;lcd_ecrireDonnees@donnee stored from wreg
  1377   000858  0100               	movlb	0	; force () banked
  1378   00085A  6FA5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1379   00085C                     
  1380                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  1381   00085C  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1382   000860  0E01               	movlw	1
  1383   000862  0100               	movlb	0	; force () banked
  1384   000864  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1385   000866  5080               	movf	128,w,c	;volatile
  1386   000868  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1387   00086A  0BFE               	andlw	-2
  1388   00086C  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1389   00086E  6E80               	movwf	128,c	;volatile
  1390                           
  1391                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  1392   000870  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1393   000874  90D8               	bcf	status,0,c
  1394   000876  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1395   000878  0E01               	movlw	1
  1396   00087A  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1397   00087C  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1398   00087E  5080               	movf	128,w,c	;volatile
  1399   000880  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1400   000882  0BFD               	andlw	-3
  1401   000884  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1402   000886  6E80               	movwf	128,c	;volatile
  1403                           
  1404                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  1405   000888  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1406   00088C  90D8               	bcf	status,0,c
  1407   00088E  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1408   000890  90D8               	bcf	status,0,c
  1409   000892  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1410   000894  0E01               	movlw	1
  1411   000896  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1412   000898  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1413   00089A  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1414   00089C  5080               	movf	128,w,c	;volatile
  1415   00089E  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1416   0008A0  0BFB               	andlw	-5
  1417   0008A2  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1418   0008A4  6E80               	movwf	128,c	;volatile
  1419                           
  1420                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  1421   0008A6  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1422   0008AA  90D8               	bcf	status,0,c
  1423   0008AC  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1424   0008AE  90D8               	bcf	status,0,c
  1425   0008B0  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1426   0008B2  90D8               	bcf	status,0,c
  1427   0008B4  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1428   0008B6  0E01               	movlw	1
  1429   0008B8  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1430   0008BA  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1431   0008BC  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1432   0008BE  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1433   0008C0  5080               	movf	128,w,c	;volatile
  1434   0008C2  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1435   0008C4  0BF7               	andlw	-9
  1436   0008C6  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1437   0008C8  6E80               	movwf	128,c	;volatile
  1438   0008CA                     
  1439                           ; BSR set to: 0
  1440   0008CA  0012               	return		;funcret
  1441   0008CC  FFFF               	dw	65535	; errata NOP
  1442   0008CE                     __end_of_lcd_ecrireDonnees:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _lcd_busy *****************
  1446 ;; Defined at:
  1447 ;;		line 122 in file "Lcd4Lignes.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  adresse         2    2[BANK0 ] int 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      unsigned char 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1461 ;;      Params:         0       0       0       0       0       0       0
  1462 ;;      Locals:         0       2       0       0       0       0       0
  1463 ;;      Temps:          0       2       0       0       0       0       0
  1464 ;;      Totals:         0       4       0       0       0       0       0
  1465 ;;Total ram usage:        4 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 1
  1468 ;; This function calls:
  1469 ;;		_lcd_lireDonnees
  1470 ;; This function is called by:
  1471 ;;		_lcd_wrCom
  1472 ;;		_lcd_wrData
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text11
  1477   0008CE                     __ptext11:
  1478                           	callstack 0
  1479   0008CE                     _lcd_busy:
  1480                           	callstack 0
  1481   0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1482   0008D0                     
  1483                           ;Lcd4Lignes.c: 125:     int adresse;;Lcd4Lignes.c: 127:     PORTBbits.RB4 = 0;
  1484   0008D0  9881               	bcf	129,4,c	;volatile
  1485                           
  1486                           ;Lcd4Lignes.c: 128:     PORTAbits.RA5 = 1;
  1487   0008D2  8A80               	bsf	128,5,c	;volatile
  1488   0008D4                     l29:
  1489   0008D4  FFFF               	dw	65535	; assembler added errata NOP
  1490                           
  1491                           ;Lcd4Lignes.c: 131:     {;Lcd4Lignes.c: 132:         PORTAbits.RA4 = 1;
  1492   0008D6  8880               	bsf	128,4,c	;volatile
  1493                           
  1494                           ;Lcd4Lignes.c: 133:         __nop();
  1495   0008D8  F000               	nop	
  1496   0008DA                     
  1497                           ;Lcd4Lignes.c: 134:         adresse = lcd_lireDonnees() << 4;
  1498   0008DA  EC97  F005         	call	_lcd_lireDonnees	;wreg free
  1499   0008DE  0100               	movlb	0	; force () banked
  1500   0008E0  6FA4               	movwf	??_lcd_busy& (0+255),b
  1501   0008E2  6BA5               	clrf	(??_lcd_busy+1)& (0+255),b
  1502   0008E4  3BA4               	swapf	??_lcd_busy& (0+255),f,b
  1503   0008E6  3BA5               	swapf	(??_lcd_busy+1)& (0+255),f,b
  1504   0008E8  0EF0               	movlw	240
  1505   0008EA  17A5               	andwf	(??_lcd_busy+1)& (0+255),f,b
  1506   0008EC  51A4               	movf	??_lcd_busy& (0+255),w,b
  1507   0008EE  0B0F               	andlw	15
  1508   0008F0  13A5               	iorwf	(??_lcd_busy+1)& (0+255),f,b
  1509   0008F2  0EF0               	movlw	240
  1510   0008F4  17A4               	andwf	??_lcd_busy& (0+255),f,b
  1511   0008F6  C0A4  F0A6         	movff	??_lcd_busy,lcd_busy@adresse
  1512   0008FA  C0A5  F0A7         	movff	??_lcd_busy+1,lcd_busy@adresse+1
  1513   0008FE                     
  1514                           ; BSR set to: 0
  1515                           ;Lcd4Lignes.c: 135:         PORTAbits.RA4 = 0;
  1516   0008FE  9880               	bcf	128,4,c	;volatile
  1517   000900                     
  1518                           ; BSR set to: 0
  1519                           ;Lcd4Lignes.c: 136:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1520   000900  D000               	nop2		;2 cycle nop
  1521   000902  D000               	nop2		;2 cycle nop
  1522   000904  D000               	nop2		;2 cycle nop
  1523   000906  D000               	nop2		;2 cycle nop
  1524   000908                     
  1525                           ;Lcd4Lignes.c: 137:         PORTAbits.RA4 = 1;
  1526   000908  8880               	bsf	128,4,c	;volatile
  1527   00090A                     
  1528                           ;Lcd4Lignes.c: 138:         __nop();
  1529   00090A  F000               	nop	
  1530                           
  1531                           ;Lcd4Lignes.c: 139:         adresse |= lcd_lireDonnees();
  1532   00090C  EC97  F005         	call	_lcd_lireDonnees	;wreg free
  1533   000910  0100               	movlb	0	; force () banked
  1534   000912  6FA4               	movwf	??_lcd_busy& (0+255),b
  1535   000914  51A4               	movf	??_lcd_busy& (0+255),w,b
  1536   000916  0100               	movlb	0	; force () banked
  1537   000918  13A6               	iorwf	lcd_busy@adresse& (0+255),f,b
  1538   00091A                     
  1539                           ; BSR set to: 0
  1540                           ;Lcd4Lignes.c: 140:         PORTAbits.RA4 = 0;
  1541   00091A  9880               	bcf	128,4,c	;volatile
  1542   00091C                     
  1543                           ; BSR set to: 0
  1544                           ;Lcd4Lignes.c: 141:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1545   00091C  D000               	nop2		;2 cycle nop
  1546   00091E  D000               	nop2		;2 cycle nop
  1547   000920  D000               	nop2		;2 cycle nop
  1548   000922  D000               	nop2		;2 cycle nop
  1549   000924                     
  1550                           ;Lcd4Lignes.c: 142:     }
  1551   000924  0100               	movlb	0	; force () banked
  1552   000926  BFA6               	btfsc	lcd_busy@adresse& (0+255),7,b
  1553   000928  EF98  F004         	goto	u11
  1554   00092C  EF9B  F004         	goto	u10
  1555   000930                     u11:
  1556   000930  FFFF               	dw	65535	; assembler added errata NOP
  1557   000932  EF6A  F004         	goto	l29
  1558   000936                     u10:
  1559   000936  FFFF               	dw	65535	; assembler added errata NOP
  1560   000938                     
  1561                           ; BSR set to: 0
  1562                           ;Lcd4Lignes.c: 145:     PORTAbits.RA5 = 0;
  1563   000938  9A80               	bcf	128,5,c	;volatile
  1564   00093A                     
  1565                           ; BSR set to: 0
  1566                           ;Lcd4Lignes.c: 146:     return(adresse&0x7f);
  1567   00093A  0100               	movlb	0	; force () banked
  1568   00093C  51A6               	movf	lcd_busy@adresse& (0+255),w,b
  1569   00093E  0B7F               	andlw	127
  1570   000940                     
  1571                           ; BSR set to: 0
  1572   000940  0012               	return		;funcret
  1573   000942  FFFF               	dw	65535	; errata NOP
  1574   000944                     __end_of_lcd_busy:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _lcd_lireDonnees *****************
  1578 ;; Defined at:
  1579 ;;		line 92 in file "Lcd4Lignes.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      unsigned char 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_lcd_busy
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text12
  1607   000B2E                     __ptext12:
  1608                           	callstack 0
  1609   000B2E                     _lcd_lireDonnees:
  1610                           	callstack 0
  1611   000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1612   000B30                     
  1613                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  1614   000B30  5080               	movf	128,w,c	;volatile
  1615   000B32  0B0F               	andlw	15
  1616   000B34  0012               	return		;funcret
  1617   000B36  FFFF               	dw	65535	; errata NOP
  1618   000B38                     __end_of_lcd_lireDonnees:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _initialisation *****************
  1622 ;; Defined at:
  1623 ;;		line 58 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text13
  1651   000ADA                     __ptext13:
  1652                           	callstack 0
  1653   000ADA                     _initialisation:
  1654                           	callstack 0
  1655   000ADA  FFFF               	dw	65535	; assembler added errata NOP
  1656   000ADC                     
  1657                           ;main.c: 60:     TRISD = 0;
  1658   000ADC  0E00               	movlw	0
  1659   000ADE  6E95               	movwf	149,c	;volatile
  1660                           
  1661                           ;main.c: 61:     TRISC = 0;
  1662   000AE0  0E00               	movlw	0
  1663   000AE2  6E94               	movwf	148,c	;volatile
  1664                           
  1665                           ;main.c: 62:     TRISB=1;
  1666   000AE4  0E01               	movlw	1
  1667   000AE6  6E93               	movwf	147,c	;volatile
  1668                           
  1669                           ;main.c: 63:     ADCON1=7;
  1670   000AE8  0E07               	movlw	7
  1671   000AEA  6EC1               	movwf	193,c	;volatile
  1672   000AEC                     
  1673                           ;main.c: 65:     INTCONbits.GIE = 1;
  1674   000AEC  8EF2               	bsf	242,7,c	;volatile
  1675   000AEE                     
  1676                           ;main.c: 67:     INTCONbits.INT0IF = 0;
  1677   000AEE  92F2               	bcf	242,1,c	;volatile
  1678   000AF0                     
  1679                           ;main.c: 68:     INTCONbits.INT0IE = 1;
  1680   000AF0  88F2               	bsf	242,4,c	;volatile
  1681   000AF2                     
  1682                           ;main.c: 69:     INTCON2bits.INTEDG0 = 0;
  1683   000AF2  9CF1               	bcf	241,6,c	;volatile
  1684   000AF4                     
  1685                           ;main.c: 71:     INTCON3bits.INT1IE = 1;
  1686   000AF4  86F0               	bsf	240,3,c	;volatile
  1687   000AF6                     
  1688                           ;main.c: 72:     INTCON3bits.INT1IF = 0;
  1689   000AF6  90F0               	bcf	240,0,c	;volatile
  1690   000AF8                     
  1691                           ;main.c: 73:     INTCON2bits.INTEDG1 = 0;
  1692   000AF8  9AF1               	bcf	241,5,c	;volatile
  1693   000AFA  0012               	return		;funcret
  1694   000AFC  FFFF               	dw	65535	; errata NOP
  1695   000AFE                     __end_of_initialisation:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _init_serie *****************
  1699 ;; Defined at:
  1700 ;;		line 29 in file "serie_458.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1714 ;;      Params:         0       0       0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text14
  1728   000AFE                     __ptext14:
  1729                           	callstack 0
  1730   000AFE                     _init_serie:
  1731                           	callstack 0
  1732   000AFE  FFFF               	dw	65535	; assembler added errata NOP
  1733   000B00                     
  1734                           ;serie_458.c: 32:     TRISCbits.TRISC7=1;
  1735   000B00  8E94               	bsf	148,7,c	;volatile
  1736                           
  1737                           ;serie_458.c: 33:     TRISCbits.TRISC6=1;
  1738   000B02  8C94               	bsf	148,6,c	;volatile
  1739   000B04                     
  1740                           ;serie_458.c: 40:     SPBRG = 25;
  1741   000B04  0E19               	movlw	25
  1742   000B06  6EAF               	movwf	175,c	;volatile
  1743   000B08                     
  1744                           ;serie_458.c: 45:     TXSTAbits.BRGH = 0;
  1745   000B08  94AC               	bcf	172,2,c	;volatile
  1746   000B0A                     
  1747                           ;serie_458.c: 49:     RCSTAbits.SPEN = 1;
  1748   000B0A  8EAB               	bsf	171,7,c	;volatile
  1749   000B0C                     
  1750                           ;serie_458.c: 50:     TXSTAbits.SYNC = 0;
  1751   000B0C  98AC               	bcf	172,4,c	;volatile
  1752   000B0E                     
  1753                           ;serie_458.c: 53:     RCSTAbits.CREN = 1;
  1754   000B0E  88AB               	bsf	171,4,c	;volatile
  1755   000B10                     
  1756                           ;serie_458.c: 56:     TXSTAbits.TXEN = 1;
  1757   000B10  8AAC               	bsf	172,5,c	;volatile
  1758   000B12  0012               	return		;funcret
  1759   000B14  FFFF               	dw	65535	; errata NOP
  1760   000B16                     __end_of_init_serie:
  1761                           	callstack 0
  1762                           
  1763                           	psect	param0
  1764   000000                     
  1765                           	psect	idloc
  1766                           
  1767                           ;Config register IDLOC0 @ 0x200000
  1768                           ;	unspecified, using default values
  1769   200000                     	org	2097152
  1770   200000  FF                 	db	255
  1771                           
  1772                           ;Config register IDLOC1 @ 0x200001
  1773                           ;	unspecified, using default values
  1774   200001                     	org	2097153
  1775   200001  FF                 	db	255
  1776                           
  1777                           ;Config register IDLOC2 @ 0x200002
  1778                           ;	unspecified, using default values
  1779   200002                     	org	2097154
  1780   200002  FF                 	db	255
  1781                           
  1782                           ;Config register IDLOC3 @ 0x200003
  1783                           ;	unspecified, using default values
  1784   200003                     	org	2097155
  1785   200003  FF                 	db	255
  1786                           
  1787                           ;Config register IDLOC4 @ 0x200004
  1788                           ;	unspecified, using default values
  1789   200004                     	org	2097156
  1790   200004  FF                 	db	255
  1791                           
  1792                           ;Config register IDLOC5 @ 0x200005
  1793                           ;	unspecified, using default values
  1794   200005                     	org	2097157
  1795   200005  FF                 	db	255
  1796                           
  1797                           ;Config register IDLOC6 @ 0x200006
  1798                           ;	unspecified, using default values
  1799   200006                     	org	2097158
  1800   200006  FF                 	db	255
  1801                           
  1802                           ;Config register IDLOC7 @ 0x200007
  1803                           ;	unspecified, using default values
  1804   200007                     	org	2097159
  1805   200007  FF                 	db	255
  1806                           
  1807                           	psect	config
  1808                           
  1809                           ; Padding undefined space
  1810   300000                     	org	3145728
  1811   300000  FF                 	db	255
  1812                           
  1813                           ;Config register CONFIG1H @ 0x300001
  1814                           ;	Oscillator Selection bits
  1815                           ;	OSC = HS, HS oscillator
  1816                           ;	Oscillator System Clock Switch Enable bit
  1817                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  1818   300001                     	org	3145729
  1819   300001  22                 	db	34
  1820                           
  1821                           ;Config register CONFIG2L @ 0x300002
  1822                           ;	Power-up Timer Enable bit
  1823                           ;	PWRT = OFF, PWRT disabled
  1824                           ;	Brown-out Reset Enable bit
  1825                           ;	BOR = OFF, Brown-out Reset disabled
  1826                           ;	Brown-out Reset Voltage bits
  1827                           ;	BORV = 25, VBOR set to 2.5V
  1828   300002                     	org	3145730
  1829   300002  0D                 	db	13
  1830                           
  1831                           ;Config register CONFIG2H @ 0x300003
  1832                           ;	Watchdog Timer Enable bit
  1833                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1834                           ;	Watchdog Timer Postscale Select bits
  1835                           ;	WDTPS = 128, 1:128
  1836   300003                     	org	3145731
  1837   300003  0E                 	db	14
  1838                           
  1839                           ;Config register CONFIG4L @ 0x300006
  1840                           ;	Stack Full/Underflow Reset Enable bit
  1841                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  1842                           ;	Low-Voltage ICSP Enable bit
  1843                           ;	LVP = OFF, Low-Voltage ICSP disabled
  1844                           ;	Background Debugger Enable bit
  1845                           ;	DEBUG = 0x1, unprogrammed default
  1846   300006                     	org	3145734
  1847   300006  80                 	db	128
  1848                           
  1849                           ; Padding undefined space
  1850   300007                     	org	3145735
  1851   300007  FF                 	db	255
  1852                           
  1853                           ;Config register CONFIG5L @ 0x300008
  1854                           ;	Code Protection bit
  1855                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  1856                           ;	Code Protection bit
  1857                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  1858                           ;	Code Protection bit
  1859                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  1860                           ;	Code Protection bit
  1861                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  1862   300008                     	org	3145736
  1863   300008  0F                 	db	15
  1864                           
  1865                           ;Config register CONFIG5H @ 0x300009
  1866                           ;	Boot Block Code Protection bit
  1867                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  1868                           ;	Data EEPROM Code Protection bit
  1869                           ;	CPD = OFF, Data EEPROM not code protected
  1870   300009                     	org	3145737
  1871   300009  C0                 	db	192
  1872                           
  1873                           ;Config register CONFIG6L @ 0x30000A
  1874                           ;	Write Protection bit
  1875                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  1876                           ;	Write Protection bit
  1877                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  1878                           ;	Write Protection bit
  1879                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  1880                           ;	Write Protection bit
  1881                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  1882   30000A                     	org	3145738
  1883   30000A  0F                 	db	15
  1884                           
  1885                           ;Config register CONFIG6H @ 0x30000B
  1886                           ;	Configuration Register Write Protection bit
  1887                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  1888                           ;	Boot Block Write Protection bit
  1889                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  1890                           ;	Data EEPROM Write Protection bit
  1891                           ;	WRTD = OFF, Data EEPROM not write protected
  1892   30000B                     	org	3145739
  1893   30000B  E0                 	db	224
  1894                           
  1895                           ;Config register CONFIG7L @ 0x30000C
  1896                           ;	Table Read Protection bit
  1897                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  1898                           ;	Table Read Protection bit
  1899                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  1900                           ;	Table Read Protection bit
  1901                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  1902                           ;	Table Read Protection bit
  1903                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  1904   30000C                     	org	3145740
  1905   30000C  0F                 	db	15
  1906                           
  1907                           ;Config register CONFIG7H @ 0x30000D
  1908                           ;	Boot Block Table Read Protection bit
  1909                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  1910   30000D                     	org	3145741
  1911   30000D  40                 	db	64
  1912                           tosu	equ	0xFFF
  1913                           tosh	equ	0xFFE
  1914                           tosl	equ	0xFFD
  1915                           stkptr	equ	0xFFC
  1916                           pclatu	equ	0xFFB
  1917                           pclath	equ	0xFFA
  1918                           pcl	equ	0xFF9
  1919                           tblptru	equ	0xFF8
  1920                           tblptrh	equ	0xFF7
  1921                           tblptrl	equ	0xFF6
  1922                           tablat	equ	0xFF5
  1923                           prodh	equ	0xFF4
  1924                           prodl	equ	0xFF3
  1925                           indf0	equ	0xFEF
  1926                           postinc0	equ	0xFEE
  1927                           postdec0	equ	0xFED
  1928                           preinc0	equ	0xFEC
  1929                           plusw0	equ	0xFEB
  1930                           fsr0h	equ	0xFEA
  1931                           fsr0l	equ	0xFE9
  1932                           wreg	equ	0xFE8
  1933                           indf1	equ	0xFE7
  1934                           postinc1	equ	0xFE6
  1935                           postdec1	equ	0xFE5
  1936                           preinc1	equ	0xFE4
  1937                           plusw1	equ	0xFE3
  1938                           fsr1h	equ	0xFE2
  1939                           fsr1l	equ	0xFE1
  1940                           bsr	equ	0xFE0
  1941                           indf2	equ	0xFDF
  1942                           postinc2	equ	0xFDE
  1943                           postdec2	equ	0xFDD
  1944                           preinc2	equ	0xFDC
  1945                           plusw2	equ	0xFDB
  1946                           fsr2h	equ	0xFDA
  1947                           fsr2l	equ	0xFD9
  1948                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    11
    Data        68
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     15      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 11
		 -> msg(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1186
                         _init_serie
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     466
                                             10 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     300
                                              6 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     720
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      60
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     510
                                              6 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     120
                                              4 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     150
                                              4 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      60
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             4     4      0      30
                                              0 BANK0      4     4      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serie
   _initialisation
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
       _lcd_wrData
         _lcd_busy
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
       _lcd_wrData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      59       5       55.6%
BITBIGSFRl          80      0       0      22        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhhhl      2E      0       0      17        0.0%
BITBIGSFRhhhlh      11      0       0      18        0.0%
BITBIGSFRhl         10      0       0      21        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRhhhlll      C      0       0      19        0.0%
BITBIGSFRhhhlll      8      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59      23        0.0%
DATA                 0      0      59       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 17:04:47 2023

                                                        l30 0938  
                                                        l23 0B34  
                                                        l31 0940  
                                                        l40 0A06  
                                                        l26 08CA  
                                                        l43 09AE  
                                                        l52 0B1E  
                                                        l29 08D4  
                                                        l37 075C  
                                                        l46 0AB0  
                                                        l84 07D8  
                                                        l78 0850  
                                                        l97 06C0  
                                                        u10 0936  
                                                        u11 0930  
                                                        u20 071C  
                                                        u21 0716  
                                                        u30 0734  
                                                        u31 072E  
                                                        u40 0630  
                                                        u41 062A  
                                                        u50 0652  
                                                        u51 064C  
                                                        u60 06A0  
                                                        u61 069A  
                                                        u70 06BA  
                                                        u71 06B4  
                                                       l100 0B2A  
                                                       l141 0AFA  
                                                       l135 0AD0  
                                                       l136 0AD2  
                                                       l158 0B12  
                                                       l900 06DC  
                                                       l910 06FC  
                                                       l902 06DE  
                                                       l920 074A  
                                                       l912 0700  
                                                       l904 06E8  
                                                       l922 0750  
                                                       l914 0708  
                                                       l906 06EC  
                                                       l930 09BC  
                                                       l924 0758  
                                                       l916 071E  
                                                       l908 06F4  
                                                       l940 09D6  
                                                       l932 09C0  
                                                       l862 0B30  
                                                       l870 08DA  
                                                       l918 0734  
                                                       l950 09F6  
                                                       l942 09DA  
                                                       l934 09C8  
                                                       l880 091A  
                                                       l872 08FE  
                                                       l952 09FA  
                                                       l944 09E2  
                                                       l936 09CA  
                                                       l928 09B8  
                                                       l960 094A  
                                                       l882 091C  
                                                       l874 0900  
                                                       l866 085C  
                                                       l890 0B24  
                                                       l946 09EA  
                                                       l938 09CC  
                                                       l970 096C  
                                                       l962 095E  
                                                       l884 0924  
                                                       l876 0908  
                                                       l868 08D0  
                                                       l892 06CA  
                                                       l956 0B18  
                                                       l948 09EE  
                                                       l980 098C  
                                                       l972 0974  
                                                       l964 0960  
                                                       l886 093A  
                                                       l878 090A  
                                                       l894 06CE  
                                                       l990 09AA  
                                                       l982 0990  
                                                       l974 097A  
                                                       l966 0962  
                                                       l958 0946  
                                                       l896 06D2  
                                                       l992 0610  
                                                       l984 0998  
                                                       l976 097E  
                                                       l968 0968  
                                                       l898 06DA  
                                                       l994 0616  
                                                       l986 099E  
                                                       l978 0986  
                                                       l996 061C  
                                                       l988 09A2  
                                                       u150 07D6  
                                                       u207 09A4  
                                                       u151 07D0  
                                                       u217 0702  
                                                       u227 073E  
                                                       u167 0952  
                                                       u177 096E  
                                                       u187 0980  
                                                       u197 0992  
                                                       _msg 0601  
                                                       prod 000FF3  
                                                       wreg 000FE8  
                                                      l1000 0636  
                                                      l1010 068C  
                                                      l1002 063E  
                                                      l1100 0B00  
                                                      l1012 06A0  
                                                      l1020 07F2  
                                                      l1110 0B0E  
                                                      l1102 0B04  
                                                      l1014 06A6  
                                                      l1006 0658  
                                                      l1022 07FE  
                                                      l1112 0B10  
                                                      l1104 0B08  
                                                      l1008 0688  
                                                      l1016 06BA  
                                                      l1040 0A94  
                                                      l1024 080A  
                                                      l1106 0B0A  
                                                      l1042 0A9A  
                                                      l1034 0A84  
                                                      l1018 07E2  
                                                      l1108 0B0C  
                                                      l1044 0AA0  
                                                      l1036 0A8A  
                                                      l1028 0816  
                                                      l1046 0AA6  
                                                      l1038 0A8E  
                                                      l1206 0830  
                                                      l1048 0AAC  
                                                      l1090 0AF0  
                                                      l1092 0AF2  
                                                      l1084 0ADC  
                                                      l1172 0762  
                                                      l1180 0AB4  
                                                      l1094 0AF4  
                                                      l1086 0AEC  
                                                      l1174 076C  
                                                      l1182 0ABE  
                                                      l1096 0AF6  
                                                      l1088 0AEE  
                                                      l1176 0798  
                                                      l1184 0AC2  
                                                      l1098 0AF8  
                                                      l1178 079C  
                                                      _RCIF 007CF5  
                                          ??_initialisation 00A4  
                                                      _main 0AB4  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      prodl 000FF3  
                                                      start 0002  
                                           ?_lcd_putMessage 00AE  
                                              ___param_bank 000000  
                                           ??_lcd_ecritChar 00AA  
                                                     ?_main 00A4  
                                                     _RCREG 000FAE  
                                                     _SPBRG 000FAF  
                                                     _PORTA 000F80  
                                                     _TRISA 000F92  
                                                     _TRISB 000F93  
                                                     _TRISC 000F94  
                                                     _TRISD 000F95  
                                                     _TXREG 000FAD  
                                           ??_lcd_initCGRam 00AA  
                                                     tablat 000FF5  
                                                     status 000FD8  
                                           __initialization 0A4E  
                                              __end_of_main 0ADA  
                                      lcd_putMessage@chaine 00AE  
                                                    ??_main 00B3  
                                             __activetblptr 000003  
                                                    _ADCON1 000FC1  
                                            lcd_initCGRam@i 00AC  
                                            lcd_initCGRam@j 00AD  
                                          __end_of_lcd_busy 0944  
                                          __end_of_lcd_init 0AB4  
                                                    _g_loto 00A0  
                                                    isa$std 000001  
                                              __mediumconst 0000  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                            _g_indexChiffre 00B7  
                                         _lcd_resetSequence 0944  
                                                __accesstop 0060  
                                   __end_of__initialization 0A7C  
                                       _lcd_strobeEnableBit 0B22  
                                        ?_lcd_resetSequence 00A4  
                                             ___rparam_used 000000  
                                              __pidataBANK0 0A0A  
                                       ??_lcd_resetSequence 00A6  
                                      ?_lcd_strobeEnableBit 00A4  
                                 __end_of_lcd_resetSequence 09B2  
                                         _lcd_ecrireDonnees 0856  
                                                __pbssBANK0 00B3  
                                          ??_lcd_putMessage 00B0  
                                        ?_lcd_ecrireDonnees 00A4  
                                       ??_lcd_ecrireDonnees 00A4  
                                     ??_lcd_strobeEnableBit 00A4  
                                                _lcd_wrData 09B2  
                                 __end_of_lcd_ecrireDonnees 08CE  
                                                 ?_lcd_busy 00A4  
                                                 ?_lcd_init 00A4  
                                   lcd_ecrireDonnees@donnee 00A5  
                                                   __Hparam 0000  
                                                   __Lparam 0000  
                                         __end_of_lcd_wrCom 0760  
                                              __psmallconst 0600  
                                                   __pcinit 0A4E  
                                                _init_serie 0AFE  
                                                   __ramtop 0600  
                                                   __ptext0 0AB4  
                                                   __ptext1 0760  
                                                   __ptext2 07DC  
                                                   __ptext3 0A82  
                                                   __ptext4 0944  
                                                   __ptext5 060E  
                                                   __ptext6 09B2  
                                                   __ptext7 0B16  
                                                   __ptext8 06C4  
                                                   __ptext9 0B22  
                                     __end_of_lcd_ecritChar 0856  
                                           lcd_busy@adresse 00A6  
                                          lcd_ecritChar@car 00AC  
                                                ??_lcd_busy 00A4  
                                                ??_lcd_init 00AE  
                                      end_of_initialization 0A7C  
                                     __end_of_lcd_initCGRam 06C4  
                                         ??_lcd_lireDonnees 00A4  
                                                 _RCSTAbits 000FAB  
                                                   postdec1 000FE5  
                                                   postinc0 000FEE  
                                         ??_lcd_curseurHome 00AA  
                                       lcd_ecritChar@posRam 00AD  
                                                 _PORTAbits 000F80  
                                                 _PORTBbits 000F81  
                                                 _TRISCbits 000F94  
                                               ?_lcd_wrData 00A4  
                                                 _TXSTAbits 000FAC  
                                               ?_init_serie 00A4  
                                       start_initialization 0A4E  
                                               __end_of_msg 060C  
                                             _g_mesChiffres 00B3  
                                               __pdataBANK0 0060  
                                             __pcstackBANK0 00A4  
                               __end_of_lcd_strobeEnableBit 0B2E  
                                            _initialisation 0ADA  
                                                 _lcd_wrCom 06C4  
                                               __smallconst 0600  
                                           _lcd_lireDonnees 0B2E  
                                       lcd_wrData@caractere 00A8  
                                           _lcd_curseurHome 0B16  
                                    __end_of_initialisation 0AFE  
                                                ?_lcd_wrCom 00A4  
                                              ??_lcd_wrData 00A8  
                                         lcd_wrCom@commande 00A9  
                                               _INTCON2bits 000FF1  
                                               _INTCON3bits 000FF0  
                                                 copy_data0 0A62  
                                                  __Hparam0 0000  
                                                  __Lparam0 0000  
                                           ?_initialisation 00A4  
                                        __end_of_lcd_wrData 0A0A  
                                              ??_init_serie 00A4  
                                           lcd_putMessage@j 00B2  
                                   __end_of_lcd_lireDonnees 0B38  
                                                  _matCGRAM 0060  
                                   __end_of_lcd_curseurHome 0B22  
                                                  __ptext10 0856  
                                                  __ptext11 08CE  
                                                  __ptext12 0B2E  
                                                  __ptext13 0ADA  
                                                  __ptext14 0AFE  
                                                  _lcd_busy 08CE  
                                                  _lcd_init 0A82  
                                        __end_of_init_serie 0B16  
                                                  isa$xinst 000000  
                                               ??_lcd_wrCom 00A8  
                                             _lcd_ecritChar 07DC  
                                                _INTCONbits 000FF2  
                                             _lcd_initCGRam 060E  
                                            _lcd_putMessage 0760  
                                            ?_lcd_ecritChar 00A4  
                                          ?_lcd_lireDonnees 00A4  
                                          ?_lcd_curseurHome 00A4  
                                            ?_lcd_initCGRam 00A4  
                                    __end_of_lcd_putMessage 07DC  
