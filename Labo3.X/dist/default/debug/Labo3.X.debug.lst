

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 17:12:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F458 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataBANK0
    70   000A0A                     __pidataBANK0:
    71                           	callstack 0
    72                           
    73                           ;initializer for _matCGRAM
    74   000A0A  08                 	db	8
    75   000A0B  04                 	db	4
    76   000A0C  04                 	db	4
    77   000A0D  0A                 	db	10
    78   000A0E  11                 	db	17
    79   000A0F  1F                 	db	31
    80   000A10  11                 	db	17
    81   000A11  00                 	db	0
    82   000A12  02                 	db	2
    83   000A13  04                 	db	4
    84   000A14  0E                 	db	14
    85   000A15  11                 	db	17
    86   000A16  1F                 	db	31
    87   000A17  10                 	db	16
    88   000A18  0E                 	db	14
    89   000A19  00                 	db	0
    90   000A1A  02                 	db	2
    91   000A1B  04                 	db	4
    92   000A1C  1F                 	db	31
    93   000A1D  10                 	db	16
    94   000A1E  1E                 	db	30
    95   000A1F  10                 	db	16
    96   000A20  1F                 	db	31
    97   000A21  00                 	db	0
    98   000A22  08                 	db	8
    99   000A23  04                 	db	4
   100   000A24  0E                 	db	14
   101   000A25  11                 	db	17
   102   000A26  1F                 	db	31
   103   000A27  10                 	db	16
   104   000A28  0E                 	db	14
   105   000A29  00                 	db	0
   106   000A2A  08                 	db	8
   107   000A2B  04                 	db	4
   108   000A2C  1F                 	db	31
   109   000A2D  10                 	db	16
   110   000A2E  1E                 	db	30
   111   000A2F  10                 	db	16
   112   000A30  1F                 	db	31
   113   000A31  00                 	db	0
   114   000A32  04                 	db	4
   115   000A33  0A                 	db	10
   116   000A34  0E                 	db	14
   117   000A35  11                 	db	17
   118   000A36  1F                 	db	31
   119   000A37  10                 	db	16
   120   000A38  0E                 	db	14
   121   000A39  00                 	db	0
   122   000A3A  08                 	db	8
   123   000A3B  04                 	db	4
   124   000A3C  0E                 	db	14
   125   000A3D  01                 	db	1
   126   000A3E  0F                 	db	15
   127   000A3F  11                 	db	17
   128   000A40  0F                 	db	15
   129   000A41  00                 	db	0
   130   000A42  04                 	db	4
   131   000A43  0A                 	db	10
   132   000A44  0E                 	db	14
   133   000A45  01                 	db	1
   134   000A46  0F                 	db	15
   135   000A47  11                 	db	17
   136   000A48  0F                 	db	15
   137   000A49  00                 	db	0
   138                           
   139                           ;initializer for _g_loto
   140   000A4A  01                 	db	1
   141   000A4B  02                 	db	2
   142   000A4C  03                 	db	3
   143   000A4D  04                 	db	4
   144                           
   145                           	psect	smallconst
   146   000600                     __psmallconst:
   147                           	callstack 0
   148   000600  00                 	db	0
   149   000601                     _msg:
   150                           	callstack 0
   151   000601  4C                 	db	76
   152   000602  61                 	db	97
   153   000603  62                 	db	98
   154   000604  33                 	db	51
   155   000605  20                 	db	32
   156   000606  4D                 	db	77
   157   000607  61                 	db	97
   158   000608  72                 	db	114
   159   000609  63                 	db	99
   160   00060A  47                 	db	71
   161   00060B  00                 	db	0
   162   00060C                     __end_of_msg:
   163                           	callstack 0
   164   000000                     _RCREG	set	4014
   165   000000                     _TXREG	set	4013
   166   000000                     _INTCON3bits	set	4080
   167   000000                     _INTCON2bits	set	4081
   168   000000                     _INTCONbits	set	4082
   169   000000                     _TRISC	set	3988
   170   000000                     _TRISD	set	3989
   171   000000                     _TRISB	set	3987
   172   000000                     _TRISCbits	set	3988
   173   000000                     _PORTAbits	set	3968
   174   000000                     _PORTA	set	3968
   175   000000                     _RCSTAbits	set	4011
   176   000000                     _TXSTAbits	set	4012
   177   000000                     _SPBRG	set	4015
   178   000000                     _ADCON1	set	4033
   179   000000                     _RCIF	set	31989
   180   000000                     _TRISA	set	3986
   181   000000                     _PORTBbits	set	3969
   182   00060C  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   000A4E                     __pcinit:
   188                           	callstack 0
   189   000A4E                     start_initialization:
   190                           	callstack 0
   191   000A4E                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to BANK0 (68 bytes)
   195                           ; load TBLPTR registers with __pidataBANK0
   196   000A4E  0E0A               	movlw	low __pidataBANK0
   197   000A50  6EF6               	movwf	tblptrl,c
   198   000A52  0E0A               	movlw	high __pidataBANK0
   199   000A54  6EF7               	movwf	tblptrh,c
   200   000A56  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   201   000A58  6EF8               	movwf	tblptru,c
   202   000A5A  EE00  F060         	lfsr	0,__pdataBANK0
   203   000A5E  EE10 F044          	lfsr	1,68
   204   000A62                     copy_data0:
   205   000A62  0009               	tblrd		*+
   206   000A64  CFF5 FFEE          	movff	tablat,postinc0
   207   000A68  50E5               	movf	postdec1,w,c
   208   000A6A  50E1               	movf	fsr1l,w,c
   209   000A6C  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to BANK0 (6 bytes)
   212   000A6E  0100               	movlb	0
   213   000A70  6BB8               	clrf	(__pbssBANK0+5)& (0+255),b
   214   000A72  6BB7               	clrf	(__pbssBANK0+4)& (0+255),b
   215   000A74  6BB6               	clrf	(__pbssBANK0+3)& (0+255),b
   216   000A76  6BB5               	clrf	(__pbssBANK0+2)& (0+255),b
   217   000A78  6BB4               	clrf	(__pbssBANK0+1)& (0+255),b
   218   000A7A  6BB3               	clrf	__pbssBANK0& (0+255),b
   219   000A7C                     end_of_initialization:
   220                           	callstack 0
   221   000A7C                     __end_of__initialization:
   222                           	callstack 0
   223   000A7C  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   000A7E  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   000A80  0100               	movlb	0
   226   000A82  EF5C  F005         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssBANK0
   229   0000B3                     __pbssBANK0:
   230                           	callstack 0
   231   0000B3                     _g_mesChiffres:
   232                           	callstack 0
   233   0000B3                     	ds	4
   234   0000B7                     _g_indexChiffre:
   235                           	callstack 0
   236   0000B7                     	ds	2
   237                           
   238                           	psect	dataBANK0
   239   000060                     __pdataBANK0:
   240                           	callstack 0
   241   000060                     _matCGRAM:
   242                           	callstack 0
   243   000060                     	ds	64
   244   0000A0                     _g_loto:
   245                           	callstack 0
   246   0000A0                     	ds	4
   247                           
   248                           	psect	cstackBANK0
   249   0000A4                     __pcstackBANK0:
   250                           	callstack 0
   251   0000A4                     ??_lcd_ecrireDonnees:
   252   0000A4                     ??_lcd_busy:
   253   0000A4                     
   254                           ; 1 bytes @ 0x0
   255   0000A4                     	ds	1
   256   0000A5                     lcd_ecrireDonnees@donnee:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260   0000A5                     	ds	1
   261   0000A6                     ??_lcd_resetSequence:
   262   0000A6                     lcd_busy@adresse:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266   0000A6                     	ds	2
   267   0000A8                     ??_lcd_wrCom:
   268   0000A8                     lcd_wrData@caractere:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x4
   272   0000A8                     	ds	1
   273   0000A9                     lcd_wrCom@commande:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x5
   277   0000A9                     	ds	1
   278   0000AA                     ??_lcd_initCGRam:
   279   0000AA                     ??_lcd_ecritChar:
   280                           
   281                           ; 1 bytes @ 0x6
   282   0000AA                     	ds	2
   283   0000AC                     lcd_ecritChar@car:
   284                           	callstack 0
   285   0000AC                     lcd_initCGRam@i:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x8
   289   0000AC                     	ds	1
   290   0000AD                     lcd_ecritChar@posRam:
   291                           	callstack 0
   292   0000AD                     lcd_initCGRam@j:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x9
   296   0000AD                     	ds	1
   297   0000AE                     lcd_putMessage@chaine:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xA
   301   0000AE                     	ds	2
   302   0000B0                     ??_lcd_putMessage:
   303                           
   304                           ; 1 bytes @ 0xC
   305   0000B0                     	ds	2
   306   0000B2                     lcd_putMessage@j:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xE
   310   0000B2                     	ds	1
   311   0000B3                     
   312                           ; 1 bytes @ 0xF
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 41 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   332 ;;      Params:         0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels required when called: 7
   338 ;; This function calls:
   339 ;;		_init_serie
   340 ;;		_initialisation
   341 ;;		_lcd_init
   342 ;;		_lcd_putMessage
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text0
   349   000AB8                     __ptext0:
   350                           	callstack 0
   351   000AB8                     _main:
   352                           	callstack 24
   353   000AB8  FFFF               	dw	65535	; assembler added errata NOP
   354                           
   355                           ;main.c: 44:     initialisation();
   356   000ABA  EC6F  F005         	call	_initialisation	;wreg free
   357                           
   358                           ;main.c: 45:     init_serie();
   359   000ABE  EC81  F005         	call	_init_serie	;wreg free
   360   000AC2                     
   361                           ;main.c: 46:     lcd_init();
   362   000AC2  EC43  F005         	call	_lcd_init	;wreg free
   363   000AC6                     
   364                           ;main.c: 47:     lcd_putMessage(msg);
   365   000AC6  0E01               	movlw	low _msg
   366   000AC8  0100               	movlb	0	; force () banked
   367   000ACA  6FAE               	movwf	lcd_putMessage@chaine& (0+255),b
   368   000ACC  0E06               	movlw	high _msg
   369   000ACE  6FAF               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   370   000AD0  ECB0  F003         	call	_lcd_putMessage	;wreg free
   371   000AD4                     l135:
   372   000AD4  FFFF               	dw	65535	; assembler added errata NOP
   373   000AD6  EF6A  F005         	goto	l135
   374   000ADA  EF1F  F000         	goto	start
   375   000ADE                     __end_of_main:
   376                           	callstack 0
   377                           
   378 ;; *************** function _lcd_putMessage *****************
   379 ;; Defined at:
   380 ;;		line 386 in file "Lcd4Lignes.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;  chaine          2   10[BANK0 ] PTR const unsigned char 
   383 ;;		 -> msg(11), 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  j               1   14[BANK0 ] unsigned char 
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   395 ;;      Params:         0       2       0       0       0       0       0
   396 ;;      Locals:         0       1       0       0       0       0       0
   397 ;;      Temps:          0       2       0       0       0       0       0
   398 ;;      Totals:         0       5       0       0       0       0       0
   399 ;;Total ram usage:        5 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 5
   402 ;; This function calls:
   403 ;;		_lcd_ecritChar
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text1
   410   000760                     __ptext1:
   411                           	callstack 0
   412   000760                     _lcd_putMessage:
   413                           	callstack 0
   414   000760  FFFF               	dw	65535	; assembler added errata NOP
   415   000762                     
   416                           ;Lcd4Lignes.c: 386: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 387: 
      +                          {;Lcd4Lignes.c: 388:     unsigned char j;;Lcd4Lignes.c: 390:     for(j = 0; chaine[j] !=
      +                           0; j++)
   417   000762  0E00               	movlw	0
   418   000764  0100               	movlb	0	; force () banked
   419   000766  6FB2               	movwf	lcd_putMessage@j& (0+255),b
   420   000768  EFCE  F003         	goto	l1195
   421   00076C                     l1191:
   422   00076C  FFFF               	dw	65535	; assembler added errata NOP
   423                           
   424                           ; BSR set to: 0
   425                           ;Lcd4Lignes.c: 391:         lcd_ecritChar(chaine[j]);
   426   00076E  0100               	movlb	0	; force () banked
   427   000770  51B2               	movf	lcd_putMessage@j& (0+255),w,b
   428   000772  0100               	movlb	0	; force () banked
   429   000774  25AE               	addwf	lcd_putMessage@chaine& (0+255),w,b
   430   000776  0100               	movlb	0	; force () banked
   431   000778  6FB0               	movwf	??_lcd_putMessage& (0+255),b
   432   00077A  0E00               	movlw	0
   433   00077C  0100               	movlb	0	; force () banked
   434   00077E  21AF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   435   000780  0100               	movlb	0	; force () banked
   436   000782  6FB1               	movwf	(??_lcd_putMessage+1)& (0+255),b
   437   000784  C0B0  FFF6         	movff	??_lcd_putMessage,tblptrl
   438   000788  C0B1  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   439   00078C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   440   00078C  6AF8               	clrf	tblptru,c
   441   00078E                     	endif
   442   00078E                     	if	0	;tblptru may be non-zero
   443   00078E                     	endif
   444   00078E  0008               	tblrd		*
   445   000790  FFFF               	dw	65535	; errata NOP
   446   000792  50F5               	movf	tablat,w,c
   447   000794  ECEE  F003         	call	_lcd_ecritChar
   448   000798  0100               	movlb	0	; force () banked
   449   00079A  2BB2               	incf	lcd_putMessage@j& (0+255),f,b
   450   00079C                     l1195:
   451   00079C  FFFF               	dw	65535	; assembler added errata NOP
   452                           
   453                           ; BSR set to: 0
   454   00079E  0100               	movlb	0	; force () banked
   455   0007A0  51B2               	movf	lcd_putMessage@j& (0+255),w,b
   456   0007A2  0100               	movlb	0	; force () banked
   457   0007A4  25AE               	addwf	lcd_putMessage@chaine& (0+255),w,b
   458   0007A6  0100               	movlb	0	; force () banked
   459   0007A8  6FB0               	movwf	??_lcd_putMessage& (0+255),b
   460   0007AA  0E00               	movlw	0
   461   0007AC  0100               	movlb	0	; force () banked
   462   0007AE  21AF               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   463   0007B0  0100               	movlb	0	; force () banked
   464   0007B2  6FB1               	movwf	(??_lcd_putMessage+1)& (0+255),b
   465   0007B4  C0B0  FFF6         	movff	??_lcd_putMessage,tblptrl
   466   0007B8  C0B1  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   467   0007BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   468   0007BC  6AF8               	clrf	tblptru,c
   469   0007BE                     	endif
   470   0007BE                     	if	0	;tblptru may be non-zero
   471   0007BE                     	endif
   472   0007BE  0008               	tblrd		*
   473   0007C0  FFFF               	dw	65535	; errata NOP
   474   0007C2  50F5               	movf	tablat,w,c
   475   0007C4  0900               	iorlw	0
   476   0007C6  A4D8               	btfss	status,2,c
   477   0007C8  EFE8  F003         	goto	u171
   478   0007CC  EFEB  F003         	goto	u170
   479   0007D0                     u171:
   480   0007D0  FFFF               	dw	65535	; assembler added errata NOP
   481   0007D2  EFB6  F003         	goto	l1191
   482   0007D6                     u170:
   483   0007D6  FFFF               	dw	65535	; assembler added errata NOP
   484   0007D8                     
   485                           ; BSR set to: 0
   486   0007D8  0012               	return		;funcret
   487   0007DA  FFFF               	dw	65535	; errata NOP
   488   0007DC                     __end_of_lcd_putMessage:
   489                           	callstack 0
   490                           
   491 ;; *************** function _lcd_ecritChar *****************
   492 ;; Defined at:
   493 ;;		line 358 in file "Lcd4Lignes.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  car             1    wreg     unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  car             1    8[BANK0 ] unsigned char 
   498 ;;  posRam          1    9[BANK0 ] unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, status,2, status,0, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   508 ;;      Params:         0       0       0       0       0       0       0
   509 ;;      Locals:         0       2       0       0       0       0       0
   510 ;;      Temps:          0       2       0       0       0       0       0
   511 ;;      Totals:         0       4       0       0       0       0       0
   512 ;;Total ram usage:        4 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 4
   515 ;; This function calls:
   516 ;;		_lcd_wrCom
   517 ;;		_lcd_wrData
   518 ;; This function is called by:
   519 ;;		_lcd_putMessage
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text2
   524   0007DC                     __ptext2:
   525                           	callstack 0
   526   0007DC                     _lcd_ecritChar:
   527                           	callstack 0
   528   0007DC  FFFF               	dw	65535	; assembler added errata NOP
   529                           
   530                           ; BSR set to: 0
   531                           ;incstack = 0
   532                           ;lcd_ecritChar@car stored from wreg
   533   0007DE  0100               	movlb	0	; force () banked
   534   0007E0  6FAC               	movwf	lcd_ecritChar@car& (0+255),b
   535   0007E2                     
   536                           ;Lcd4Lignes.c: 358: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 359: {;Lcd4Ligne
      +                          s.c: 360:     unsigned char posRam;;Lcd4Lignes.c: 362:     posRam = lcd_wrData(car);
   537   0007E2  0100               	movlb	0	; force () banked
   538   0007E4  51AC               	movf	lcd_ecritChar@car& (0+255),w,b
   539   0007E6  ECD9  F004         	call	_lcd_wrData
   540   0007EA  0100               	movlb	0	; force () banked
   541   0007EC  6FAD               	movwf	lcd_ecritChar@posRam& (0+255),b
   542                           
   543                           ;Lcd4Lignes.c: 363:     switch(posRam)
   544   0007EE  EF0B  F004         	goto	l1039
   545   0007F2                     l1031:
   546   0007F2  FFFF               	dw	65535	; assembler added errata NOP
   547                           
   548                           ; BSR set to: 0
   549                           ;Lcd4Lignes.c: 366:             lcd_wrCom(0x40|0x80);
   550   0007F4  0EC0               	movlw	192
   551   0007F6  EC62  F003         	call	_lcd_wrCom
   552                           
   553                           ;Lcd4Lignes.c: 367:             break;
   554   0007FA  EF28  F004         	goto	l78
   555   0007FE                     l1033:
   556   0007FE  FFFF               	dw	65535	; assembler added errata NOP
   557                           
   558                           ; BSR set to: 0
   559                           ;Lcd4Lignes.c: 369:             lcd_wrCom(0x14|0x80);
   560   000800  0E94               	movlw	148
   561   000802  EC62  F003         	call	_lcd_wrCom
   562                           
   563                           ;Lcd4Lignes.c: 370:             break;
   564   000806  EF28  F004         	goto	l78
   565   00080A                     l1035:
   566   00080A  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ; BSR set to: 0
   569                           ;Lcd4Lignes.c: 372:             lcd_wrCom(0x54|0x80);
   570   00080C  0ED4               	movlw	212
   571   00080E  EC62  F003         	call	_lcd_wrCom
   572                           
   573                           ;Lcd4Lignes.c: 373:             break;
   574   000812  EF28  F004         	goto	l78
   575   000816                     l1039:
   576   000816  FFFF               	dw	65535	; assembler added errata NOP
   577                           
   578                           ; BSR set to: 0
   579   000818  0100               	movlb	0	; force () banked
   580   00081A  51AD               	movf	lcd_ecritChar@posRam& (0+255),w,b
   581   00081C  0100               	movlb	0	; force () banked
   582   00081E  6FAA               	movwf	??_lcd_ecritChar& (0+255),b
   583   000820  6BAB               	clrf	(??_lcd_ecritChar+1)& (0+255),b
   584                           
   585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   586                           ; Switch size 1, requested type "simple"
   587                           ; Number of cases is 1, Range of values is 0 to 0
   588                           ; switch strategies available:
   589                           ; Name         Instructions Cycles
   590                           ; simple_byte            4     3 (average)
   591                           ;	Chosen strategy is simple_byte
   592   000822  51AB               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
   593   000824  0A00               	xorlw	0	; case 0
   594   000826  B4D8               	btfsc	status,2,c
   595   000828  EF18  F004         	goto	l1223
   596   00082C  EF28  F004         	goto	l78
   597   000830                     l1223:
   598   000830  FFFF               	dw	65535	; assembler added errata NOP
   599                           
   600                           ; BSR set to: 0
   601                           ; Switch size 1, requested type "simple"
   602                           ; Number of cases is 3, Range of values is 20 to 84
   603                           ; switch strategies available:
   604                           ; Name         Instructions Cycles
   605                           ; simple_byte           10     6 (average)
   606                           ;	Chosen strategy is simple_byte
   607   000832  51AA               	movf	??_lcd_ecritChar& (0+255),w,b
   608   000834  0A14               	xorlw	20	; case 20
   609   000836  B4D8               	btfsc	status,2,c
   610   000838  EFF9  F003         	goto	l1031
   611   00083C  0A54               	xorlw	84	; case 64
   612   00083E  B4D8               	btfsc	status,2,c
   613   000840  EF05  F004         	goto	l1035
   614   000844  0A14               	xorlw	20	; case 84
   615   000846  B4D8               	btfsc	status,2,c
   616   000848  EFFF  F003         	goto	l1033
   617   00084C  EF28  F004         	goto	l78
   618   000850                     l78:
   619   000850  FFFF               	dw	65535	; assembler added errata NOP
   620   000852  0012               	return		;funcret
   621   000854  FFFF               	dw	65535	; errata NOP
   622   000856                     __end_of_lcd_ecritChar:
   623                           	callstack 0
   624                           
   625 ;; *************** function _lcd_init *****************
   626 ;; Defined at:
   627 ;;		line 257 in file "Lcd4Lignes.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 6
   648 ;; This function calls:
   649 ;;		_lcd_initCGRam
   650 ;;		_lcd_resetSequence
   651 ;;		_lcd_wrCom
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text3
   658   000A86                     __ptext3:
   659                           	callstack 0
   660   000A86                     _lcd_init:
   661                           	callstack 0
   662   000A86  FFFF               	dw	65535	; assembler added errata NOP
   663   000A88                     
   664                           ;Lcd4Lignes.c: 259:     TRISB = TRISB & 0xEF;
   665   000A88  5093               	movf	147,w,c	;volatile
   666   000A8A  0BEF               	andlw	239
   667   000A8C  6E93               	movwf	147,c	;volatile
   668   000A8E                     
   669                           ;Lcd4Lignes.c: 260:     lcd_resetSequence();
   670   000A8E  ECA2  F004         	call	_lcd_resetSequence	;wreg free
   671   000A92                     
   672                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x28);
   673   000A92  0E28               	movlw	40
   674   000A94  EC62  F003         	call	_lcd_wrCom
   675   000A98                     
   676                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x0F);
   677   000A98  0E0F               	movlw	15
   678   000A9A  EC62  F003         	call	_lcd_wrCom
   679   000A9E                     
   680                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x01);
   681   000A9E  0E01               	movlw	1
   682   000AA0  EC62  F003         	call	_lcd_wrCom
   683   000AA4                     
   684                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x06);
   685   000AA4  0E06               	movlw	6
   686   000AA6  EC62  F003         	call	_lcd_wrCom
   687   000AAA                     
   688                           ;Lcd4Lignes.c: 265:     lcd_wrCom(0x80);
   689   000AAA  0E80               	movlw	128
   690   000AAC  EC62  F003         	call	_lcd_wrCom
   691   000AB0                     
   692                           ;Lcd4Lignes.c: 266:     lcd_initCGRam();
   693   000AB0  EC07  F003         	call	_lcd_initCGRam	;wreg free
   694   000AB4  0012               	return		;funcret
   695   000AB6  FFFF               	dw	65535	; errata NOP
   696   000AB8                     __end_of_lcd_init:
   697                           	callstack 0
   698                           
   699 ;; *************** function _lcd_resetSequence *****************
   700 ;; Defined at:
   701 ;;		line 220 in file "Lcd4Lignes.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   715 ;;      Params:         0       0       0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0       0       0
   717 ;;      Temps:          0       1       0       0       0       0       0
   718 ;;      Totals:         0       1       0       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; Hardware stack levels required when called: 2
   722 ;; This function calls:
   723 ;;		_lcd_ecrireDonnees
   724 ;;		_lcd_strobeEnableBit
   725 ;; This function is called by:
   726 ;;		_lcd_init
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text4
   731   000944                     __ptext4:
   732                           	callstack 0
   733   000944                     _lcd_resetSequence:
   734                           	callstack 0
   735   000944  FFFF               	dw	65535	; assembler added errata NOP
   736   000946                     
   737                           ;Lcd4Lignes.c: 225:     TRISA = 0b00000000;
   738   000946  0E00               	movlw	0
   739   000948  6E92               	movwf	146,c	;volatile
   740   00094A                     
   741                           ;Lcd4Lignes.c: 227:     _delay((unsigned long)((40)*(16000000/4000.0)));
   742   00094A  0E9C               	movlw	156
   743   00094C  0100               	movlb	0	; force () banked
   744   00094E  6FA6               	movwf	??_lcd_resetSequence& (0+255),b
   745   000950  0EF1               	movlw	241
   746   000952                     u187:
   747   000952  FFFF               	dw	65535	; errata NOP
   748   000954  2EE8               	decfsz	wreg,f,c
   749   000956  D7FD               	bra	u187
   750   000958  2FA6               	decfsz	??_lcd_resetSequence& (0+255),f,b
   751   00095A  D7FB               	bra	u187
   752   00095C  F000               	nop	
   753   00095E                     
   754                           ;Lcd4Lignes.c: 228:     PORTBbits.RB4 = 0;
   755   00095E  9881               	bcf	129,4,c	;volatile
   756   000960                     
   757                           ;Lcd4Lignes.c: 229:     PORTAbits.RA5 = 0;
   758   000960  9A80               	bcf	128,5,c	;volatile
   759   000962                     
   760                           ;Lcd4Lignes.c: 231:     lcd_ecrireDonnees(0x03);
   761   000962  0E03               	movlw	3
   762   000964  EC2B  F004         	call	_lcd_ecrireDonnees
   763   000968                     
   764                           ;Lcd4Lignes.c: 232:     lcd_strobeEnableBit();
   765   000968  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
   766   00096C                     
   767                           ;Lcd4Lignes.c: 233:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   768   00096C  0E28               	movlw	40
   769   00096E                     u197:
   770   00096E  FFFF               	dw	65535	; errata NOP
   771   000970  2EE8               	decfsz	wreg,f,c
   772   000972  D7FD               	bra	u197
   773   000974                     
   774                           ;Lcd4Lignes.c: 236:     lcd_ecrireDonnees(0x03);
   775   000974  0E03               	movlw	3
   776   000976  EC2B  F004         	call	_lcd_ecrireDonnees
   777   00097A                     
   778                           ;Lcd4Lignes.c: 237:     lcd_strobeEnableBit();
   779   00097A  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
   780   00097E                     
   781                           ;Lcd4Lignes.c: 238:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   782   00097E  0E28               	movlw	40
   783   000980                     u207:
   784   000980  FFFF               	dw	65535	; errata NOP
   785   000982  2EE8               	decfsz	wreg,f,c
   786   000984  D7FD               	bra	u207
   787   000986                     
   788                           ;Lcd4Lignes.c: 240:     lcd_ecrireDonnees(0x03);
   789   000986  0E03               	movlw	3
   790   000988  EC2B  F004         	call	_lcd_ecrireDonnees
   791   00098C                     
   792                           ;Lcd4Lignes.c: 241:     lcd_strobeEnableBit();
   793   00098C  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
   794   000990                     
   795                           ;Lcd4Lignes.c: 242:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   796   000990  0E28               	movlw	40
   797   000992                     u217:
   798   000992  FFFF               	dw	65535	; errata NOP
   799   000994  2EE8               	decfsz	wreg,f,c
   800   000996  D7FD               	bra	u217
   801   000998                     
   802                           ;Lcd4Lignes.c: 244:     lcd_ecrireDonnees(0x02);
   803   000998  0E02               	movlw	2
   804   00099A  EC2B  F004         	call	_lcd_ecrireDonnees
   805   00099E                     
   806                           ;Lcd4Lignes.c: 245:     lcd_strobeEnableBit();
   807   00099E  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
   808   0009A2                     
   809                           ;Lcd4Lignes.c: 246:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   810   0009A2  0E28               	movlw	40
   811   0009A4                     u227:
   812   0009A4  FFFF               	dw	65535	; errata NOP
   813   0009A6  2EE8               	decfsz	wreg,f,c
   814   0009A8  D7FD               	bra	u227
   815   0009AA                     
   816                           ;Lcd4Lignes.c: 248:     TRISA = 0b00001111;
   817   0009AA  0E0F               	movlw	15
   818   0009AC  6E92               	movwf	146,c	;volatile
   819   0009AE  0012               	return		;funcret
   820   0009B0  FFFF               	dw	65535	; errata NOP
   821   0009B2                     __end_of_lcd_resetSequence:
   822                           	callstack 0
   823                           
   824 ;; *************** function _lcd_initCGRam *****************
   825 ;; Defined at:
   826 ;;		line 416 in file "Lcd4Lignes.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  j               1    9[BANK0 ] unsigned char 
   831 ;;  i               1    8[BANK0 ] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         0       0       0       0       0       0       0
   842 ;;      Locals:         0       2       0       0       0       0       0
   843 ;;      Temps:          0       2       0       0       0       0       0
   844 ;;      Totals:         0       4       0       0       0       0       0
   845 ;;Total ram usage:        4 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 5
   848 ;; This function calls:
   849 ;;		_lcd_curseurHome
   850 ;;		_lcd_wrCom
   851 ;;		_lcd_wrData
   852 ;; This function is called by:
   853 ;;		_lcd_init
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text5
   858   00060E                     __ptext5:
   859                           	callstack 0
   860   00060E                     _lcd_initCGRam:
   861                           	callstack 0
   862   00060E  FFFF               	dw	65535	; assembler added errata NOP
   863   000610                     
   864                           ;Lcd4Lignes.c: 418:     char i,j;;Lcd4Lignes.c: 420:     lcd_wrCom(0x40);
   865   000610  0E40               	movlw	64
   866   000612  EC62  F003         	call	_lcd_wrCom
   867   000616                     
   868                           ;Lcd4Lignes.c: 421:     for(i=0;i<8;i++)
   869   000616  0E00               	movlw	0
   870   000618  0100               	movlb	0	; force () banked
   871   00061A  6FAC               	movwf	lcd_initCGRam@i& (0+255),b
   872   00061C                     
   873                           ; BSR set to: 0
   874   00061C  0E07               	movlw	7
   875   00061E  0100               	movlb	0	; force () banked
   876   000620  65AC               	cpfsgt	lcd_initCGRam@i& (0+255),b
   877   000622  EF15  F003         	goto	u41
   878   000626  EF18  F003         	goto	u40
   879   00062A                     u41:
   880   00062A  FFFF               	dw	65535	; assembler added errata NOP
   881   00062C  EF1B  F003         	goto	l1011
   882   000630                     u40:
   883   000630  FFFF               	dw	65535	; assembler added errata NOP
   884   000632  EF5D  F003         	goto	l1027
   885   000636                     l1011:
   886   000636  FFFF               	dw	65535	; assembler added errata NOP
   887                           
   888                           ; BSR set to: 0
   889                           ;Lcd4Lignes.c: 422:     {;Lcd4Lignes.c: 423:         for(j=0;j<8;j++)
   890   000638  0E00               	movlw	0
   891   00063A  0100               	movlb	0	; force () banked
   892   00063C  6FAD               	movwf	lcd_initCGRam@j& (0+255),b
   893   00063E                     
   894                           ; BSR set to: 0
   895   00063E  0E07               	movlw	7
   896   000640  0100               	movlb	0	; force () banked
   897   000642  65AD               	cpfsgt	lcd_initCGRam@j& (0+255),b
   898   000644  EF26  F003         	goto	u51
   899   000648  EF29  F003         	goto	u50
   900   00064C                     u51:
   901   00064C  FFFF               	dw	65535	; assembler added errata NOP
   902   00064E  EF2C  F003         	goto	l1017
   903   000652                     u50:
   904   000652  FFFF               	dw	65535	; assembler added errata NOP
   905   000654  EF50  F003         	goto	l1023
   906   000658                     l1017:
   907   000658  FFFF               	dw	65535	; assembler added errata NOP
   908                           
   909                           ; BSR set to: 0
   910                           ;Lcd4Lignes.c: 424:             lcd_wrData(matCGRAM[i][j]);
   911   00065A  0100               	movlb	0	; force () banked
   912   00065C  51AC               	movf	lcd_initCGRam@i& (0+255),w,b
   913   00065E  0D08               	mullw	8
   914   000660  0E60               	movlw	low _matCGRAM
   915   000662  24F3               	addwf	243,w,c
   916   000664  0100               	movlb	0	; force () banked
   917   000666  6FAA               	movwf	??_lcd_initCGRam& (0+255),b
   918   000668  0E00               	movlw	high _matCGRAM
   919   00066A  20F4               	addwfc	prodh,w,c
   920   00066C  6FAB               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   921   00066E  0100               	movlb	0	; force () banked
   922   000670  51AD               	movf	lcd_initCGRam@j& (0+255),w,b
   923   000672  0100               	movlb	0	; force () banked
   924   000674  25AA               	addwf	??_lcd_initCGRam& (0+255),w,b
   925   000676  6ED9               	movwf	fsr2l,c
   926   000678  0100               	movlb	0	; force () banked
   927   00067A  0E00               	movlw	0
   928   00067C  0100               	movlb	0	; force () banked
   929   00067E  21AB               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   930   000680  6EDA               	movwf	fsr2h,c
   931   000682  50DF               	movf	indf2,w,c
   932   000684  ECD9  F004         	call	_lcd_wrData
   933   000688  0100               	movlb	0	; force () banked
   934   00068A  2BAD               	incf	lcd_initCGRam@j& (0+255),f,b
   935   00068C                     
   936                           ; BSR set to: 0
   937   00068C  0E07               	movlw	7
   938   00068E  0100               	movlb	0	; force () banked
   939   000690  65AD               	cpfsgt	lcd_initCGRam@j& (0+255),b
   940   000692  EF4D  F003         	goto	u61
   941   000696  EF50  F003         	goto	u60
   942   00069A                     u61:
   943   00069A  FFFF               	dw	65535	; assembler added errata NOP
   944   00069C  EF2C  F003         	goto	l1017
   945   0006A0                     u60:
   946   0006A0                     l1023:
   947   0006A0  FFFF               	dw	65535	; assembler added errata NOP
   948                           
   949                           ; BSR set to: 0
   950                           ;Lcd4Lignes.c: 425:     }
   951   0006A2  0100               	movlb	0	; force () banked
   952   0006A4  2BAC               	incf	lcd_initCGRam@i& (0+255),f,b
   953   0006A6                     
   954                           ; BSR set to: 0
   955   0006A6  0E07               	movlw	7
   956   0006A8  0100               	movlb	0	; force () banked
   957   0006AA  65AC               	cpfsgt	lcd_initCGRam@i& (0+255),b
   958   0006AC  EF5A  F003         	goto	u71
   959   0006B0  EF5D  F003         	goto	u70
   960   0006B4                     u71:
   961   0006B4  FFFF               	dw	65535	; assembler added errata NOP
   962   0006B6  EF1B  F003         	goto	l1011
   963   0006BA                     u70:
   964   0006BA                     l1027:
   965   0006BA  FFFF               	dw	65535	; assembler added errata NOP
   966                           
   967                           ; BSR set to: 0
   968                           ;Lcd4Lignes.c: 426:     lcd_curseurHome();
   969   0006BC  EC8D  F005         	call	_lcd_curseurHome	;wreg free
   970   0006C0  0012               	return		;funcret
   971   0006C2  FFFF               	dw	65535	; errata NOP
   972   0006C4                     __end_of_lcd_initCGRam:
   973                           	callstack 0
   974                           
   975 ;; *************** function _lcd_wrData *****************
   976 ;; Defined at:
   977 ;;		line 187 in file "Lcd4Lignes.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  caractere       1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  caractere       1    4[BANK0 ] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      unsigned char 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   991 ;;      Params:         0       0       0       0       0       0       0
   992 ;;      Locals:         0       1       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0
   994 ;;      Totals:         0       1       0       0       0       0       0
   995 ;;Total ram usage:        1 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 3
   998 ;; This function calls:
   999 ;;		_lcd_busy
  1000 ;;		_lcd_ecrireDonnees
  1001 ;;		_lcd_strobeEnableBit
  1002 ;; This function is called by:
  1003 ;;		_lcd_ecritChar
  1004 ;;		_lcd_initCGRam
  1005 ;;		_lcd_effaceChar
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text6
  1010   0009B2                     __ptext6:
  1011                           	callstack 0
  1012   0009B2                     _lcd_wrData:
  1013                           	callstack 0
  1014   0009B2  FFFF               	dw	65535	; assembler added errata NOP
  1015                           
  1016                           ;incstack = 0
  1017                           ;lcd_wrData@caractere stored from wreg
  1018   0009B4  0100               	movlb	0	; force () banked
  1019   0009B6  6FA8               	movwf	lcd_wrData@caractere& (0+255),b
  1020   0009B8                     
  1021                           ;Lcd4Lignes.c: 187: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 188: {;Lcd4Lignes.c: 189:     lcd_busy();
  1022   0009B8  EC67  F004         	call	_lcd_busy	;wreg free
  1023   0009BC                     
  1024                           ;Lcd4Lignes.c: 190:     TRISA = 0b00000000;
  1025   0009BC  0E00               	movlw	0
  1026   0009BE  6E92               	movwf	146,c	;volatile
  1027   0009C0                     
  1028                           ;Lcd4Lignes.c: 191:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1029   0009C0  D000               	nop2		;2 cycle nop
  1030   0009C2  D000               	nop2		;2 cycle nop
  1031   0009C4  D000               	nop2		;2 cycle nop
  1032   0009C6  D000               	nop2		;2 cycle nop
  1033   0009C8                     
  1034                           ;Lcd4Lignes.c: 193:     PORTBbits.RB4 = 1;
  1035   0009C8  8881               	bsf	129,4,c	;volatile
  1036   0009CA                     
  1037                           ;Lcd4Lignes.c: 194:     PORTAbits.RA5 = 0;
  1038   0009CA  9A80               	bcf	128,5,c	;volatile
  1039   0009CC                     
  1040                           ;Lcd4Lignes.c: 196:     lcd_ecrireDonnees(caractere >> 4);
  1041   0009CC  0100               	movlb	0	; force () banked
  1042   0009CE  39A8               	swapf	lcd_wrData@caractere& (0+255),w,b
  1043   0009D0  0B0F               	andlw	15
  1044   0009D2  EC2B  F004         	call	_lcd_ecrireDonnees
  1045   0009D6                     
  1046                           ;Lcd4Lignes.c: 197:     lcd_strobeEnableBit();
  1047   0009D6  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
  1048   0009DA                     
  1049                           ;Lcd4Lignes.c: 198:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1050   0009DA  D000               	nop2		;2 cycle nop
  1051   0009DC  D000               	nop2		;2 cycle nop
  1052   0009DE  D000               	nop2		;2 cycle nop
  1053   0009E0  D000               	nop2		;2 cycle nop
  1054   0009E2                     
  1055                           ;Lcd4Lignes.c: 200:     lcd_ecrireDonnees(caractere);
  1056   0009E2  0100               	movlb	0	; force () banked
  1057   0009E4  51A8               	movf	lcd_wrData@caractere& (0+255),w,b
  1058   0009E6  EC2B  F004         	call	_lcd_ecrireDonnees
  1059   0009EA                     
  1060                           ;Lcd4Lignes.c: 201:     lcd_strobeEnableBit();
  1061   0009EA  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
  1062   0009EE                     
  1063                           ;Lcd4Lignes.c: 202:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1064   0009EE  D000               	nop2		;2 cycle nop
  1065   0009F0  D000               	nop2		;2 cycle nop
  1066   0009F2  D000               	nop2		;2 cycle nop
  1067   0009F4  D000               	nop2		;2 cycle nop
  1068   0009F6                     
  1069                           ;Lcd4Lignes.c: 204:     TRISA = 0b00001111;
  1070   0009F6  0E0F               	movlw	15
  1071   0009F8  6E92               	movwf	146,c	;volatile
  1072   0009FA                     
  1073                           ;Lcd4Lignes.c: 205:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1074   0009FA  D000               	nop2		;2 cycle nop
  1075   0009FC  D000               	nop2		;2 cycle nop
  1076   0009FE  D000               	nop2		;2 cycle nop
  1077   000A00  D000               	nop2		;2 cycle nop
  1078                           
  1079                           ;Lcd4Lignes.c: 206:     return(lcd_busy());
  1080   000A02  EC67  F004         	call	_lcd_busy	;wreg free
  1081   000A06  0012               	return		;funcret
  1082   000A08  FFFF               	dw	65535	; errata NOP
  1083   000A0A                     __end_of_lcd_wrData:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _lcd_curseurHome *****************
  1087 ;; Defined at:
  1088 ;;		line 287 in file "Lcd4Lignes.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1102 ;;      Params:         0       0       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 4
  1109 ;; This function calls:
  1110 ;;		_lcd_wrCom
  1111 ;; This function is called by:
  1112 ;;		_lcd_initCGRam
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text7
  1117   000B1A                     __ptext7:
  1118                           	callstack 0
  1119   000B1A                     _lcd_curseurHome:
  1120                           	callstack 0
  1121   000B1A  FFFF               	dw	65535	; assembler added errata NOP
  1122   000B1C                     
  1123                           ;Lcd4Lignes.c: 289:     lcd_wrCom(0x02);
  1124   000B1C  0E02               	movlw	2
  1125   000B1E  EC62  F003         	call	_lcd_wrCom
  1126   000B22  0012               	return		;funcret
  1127   000B24  FFFF               	dw	65535	; errata NOP
  1128   000B26                     __end_of_lcd_curseurHome:
  1129                           	callstack 0
  1130                           
  1131 ;; *************** function _lcd_wrCom *****************
  1132 ;; Defined at:
  1133 ;;		line 155 in file "Lcd4Lignes.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  commande        1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  commande        1    5[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      unsigned char 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1147 ;;      Params:         0       0       0       0       0       0       0
  1148 ;;      Locals:         0       1       0       0       0       0       0
  1149 ;;      Temps:          0       1       0       0       0       0       0
  1150 ;;      Totals:         0       2       0       0       0       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 3
  1154 ;; This function calls:
  1155 ;;		_lcd_busy
  1156 ;;		_lcd_ecrireDonnees
  1157 ;;		_lcd_strobeEnableBit
  1158 ;; This function is called by:
  1159 ;;		_lcd_init
  1160 ;;		_lcd_curseurHome
  1161 ;;		_lcd_ecritChar
  1162 ;;		_lcd_initCGRam
  1163 ;;		_lcd_effaceAffichage
  1164 ;;		_lcd_gotoXY
  1165 ;;		_lcd_cacheCurseur
  1166 ;;		_lcd_montreCurseur
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text8
  1171   0006C4                     __ptext8:
  1172                           	callstack 0
  1173   0006C4                     _lcd_wrCom:
  1174                           	callstack 0
  1175   0006C4  FFFF               	dw	65535	; assembler added errata NOP
  1176                           
  1177                           ;incstack = 0
  1178                           ;lcd_wrCom@commande stored from wreg
  1179   0006C6  0100               	movlb	0	; force () banked
  1180   0006C8  6FA9               	movwf	lcd_wrCom@commande& (0+255),b
  1181   0006CA                     
  1182                           ;Lcd4Lignes.c: 155: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           156: {;Lcd4Lignes.c: 157:     lcd_busy();
  1183   0006CA  EC67  F004         	call	_lcd_busy	;wreg free
  1184   0006CE                     
  1185                           ;Lcd4Lignes.c: 159:     TRISA = 0b00000000;
  1186   0006CE  0E00               	movlw	0
  1187   0006D0  6E92               	movwf	146,c	;volatile
  1188   0006D2                     
  1189                           ;Lcd4Lignes.c: 160:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1190   0006D2  D000               	nop2		;2 cycle nop
  1191   0006D4  D000               	nop2		;2 cycle nop
  1192   0006D6  D000               	nop2		;2 cycle nop
  1193   0006D8  D000               	nop2		;2 cycle nop
  1194   0006DA                     
  1195                           ;Lcd4Lignes.c: 162:     PORTBbits.RB4 = 0;
  1196   0006DA  9881               	bcf	129,4,c	;volatile
  1197   0006DC                     
  1198                           ;Lcd4Lignes.c: 163:     PORTAbits.RA5 = 0;
  1199   0006DC  9A80               	bcf	128,5,c	;volatile
  1200   0006DE                     
  1201                           ;Lcd4Lignes.c: 165:     lcd_ecrireDonnees(commande >> 4);
  1202   0006DE  0100               	movlb	0	; force () banked
  1203   0006E0  39A9               	swapf	lcd_wrCom@commande& (0+255),w,b
  1204   0006E2  0B0F               	andlw	15
  1205   0006E4  EC2B  F004         	call	_lcd_ecrireDonnees
  1206   0006E8                     
  1207                           ;Lcd4Lignes.c: 166:     lcd_strobeEnableBit();
  1208   0006E8  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
  1209   0006EC                     
  1210                           ;Lcd4Lignes.c: 167:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1211   0006EC  D000               	nop2		;2 cycle nop
  1212   0006EE  D000               	nop2		;2 cycle nop
  1213   0006F0  D000               	nop2		;2 cycle nop
  1214   0006F2  D000               	nop2		;2 cycle nop
  1215   0006F4                     
  1216                           ;Lcd4Lignes.c: 169:     lcd_ecrireDonnees(commande);
  1217   0006F4  0100               	movlb	0	; force () banked
  1218   0006F6  51A9               	movf	lcd_wrCom@commande& (0+255),w,b
  1219   0006F8  EC2B  F004         	call	_lcd_ecrireDonnees
  1220   0006FC                     
  1221                           ;Lcd4Lignes.c: 170:     lcd_strobeEnableBit();
  1222   0006FC  EC93  F005         	call	_lcd_strobeEnableBit	;wreg free
  1223   000700                     
  1224                           ;Lcd4Lignes.c: 171:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1225   000700  0E28               	movlw	40
  1226   000702                     u237:
  1227   000702  FFFF               	dw	65535	; errata NOP
  1228   000704  2EE8               	decfsz	wreg,f,c
  1229   000706  D7FD               	bra	u237
  1230   000708                     
  1231                           ;Lcd4Lignes.c: 173:     if ((commande == 0x01) || commande == 0x02)
  1232   000708  0100               	movlb	0	; force () banked
  1233   00070A  05A9               	decf	lcd_wrCom@commande& (0+255),w,b
  1234   00070C  B4D8               	btfsc	status,2,c
  1235   00070E  EF8B  F003         	goto	u21
  1236   000712  EF8E  F003         	goto	u20
  1237   000716                     u21:
  1238   000716  FFFF               	dw	65535	; assembler added errata NOP
  1239   000718  EF9A  F003         	goto	l929
  1240   00071C                     u20:
  1241   00071C  FFFF               	dw	65535	; assembler added errata NOP
  1242   00071E                     
  1243                           ; BSR set to: 0
  1244   00071E  0E02               	movlw	2
  1245   000720  0100               	movlb	0	; force () banked
  1246   000722  19A9               	xorwf	lcd_wrCom@commande& (0+255),w,b
  1247   000724  A4D8               	btfss	status,2,c
  1248   000726  EF97  F003         	goto	u31
  1249   00072A  EF9A  F003         	goto	u30
  1250   00072E                     u31:
  1251   00072E  FFFF               	dw	65535	; assembler added errata NOP
  1252   000730  EFA5  F003         	goto	l931
  1253   000734                     u30:
  1254   000734                     l929:
  1255   000734  FFFF               	dw	65535	; assembler added errata NOP
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;Lcd4Lignes.c: 174:         _delay((unsigned long)((2)*(16000000/4000.0)));
  1259   000736  0E08               	movlw	8
  1260   000738  0100               	movlb	0	; force () banked
  1261   00073A  6FA8               	movwf	??_lcd_wrCom& (0+255),b
  1262   00073C  0ECB               	movlw	203
  1263   00073E                     u247:
  1264   00073E  FFFF               	dw	65535	; errata NOP
  1265   000740  2EE8               	decfsz	wreg,f,c
  1266   000742  D7FD               	bra	u247
  1267   000744  2FA8               	decfsz	??_lcd_wrCom& (0+255),f,b
  1268   000746  D7FB               	bra	u247
  1269   000748  F000               	nop	
  1270   00074A                     l931:
  1271   00074A  FFFF               	dw	65535	; assembler added errata NOP
  1272                           
  1273                           ;Lcd4Lignes.c: 176:     TRISA = 0b00001111;
  1274   00074C  0E0F               	movlw	15
  1275   00074E  6E92               	movwf	146,c	;volatile
  1276   000750                     
  1277                           ;Lcd4Lignes.c: 177:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1278   000750  D000               	nop2		;2 cycle nop
  1279   000752  D000               	nop2		;2 cycle nop
  1280   000754  D000               	nop2		;2 cycle nop
  1281   000756  D000               	nop2		;2 cycle nop
  1282   000758                     
  1283                           ;Lcd4Lignes.c: 178:     return(lcd_busy());
  1284   000758  EC67  F004         	call	_lcd_busy	;wreg free
  1285   00075C  0012               	return		;funcret
  1286   00075E  FFFF               	dw	65535	; errata NOP
  1287   000760                     __end_of_lcd_wrCom:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _lcd_strobeEnableBit *****************
  1291 ;; Defined at:
  1292 ;;		line 430 in file "Lcd4Lignes.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		None
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1306 ;;      Params:         0       0       0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_lcd_wrCom
  1317 ;;		_lcd_wrData
  1318 ;;		_lcd_resetSequence
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text9
  1323   000B26                     __ptext9:
  1324                           	callstack 0
  1325   000B26                     _lcd_strobeEnableBit:
  1326                           	callstack 0
  1327   000B26  FFFF               	dw	65535	; assembler added errata NOP
  1328   000B28                     
  1329                           ;Lcd4Lignes.c: 432:     PORTAbits.RA4 = 1;
  1330   000B28  8880               	bsf	128,4,c	;volatile
  1331                           
  1332                           ;Lcd4Lignes.c: 433:     __nop();
  1333   000B2A  F000               	nop	
  1334                           
  1335                           ;Lcd4Lignes.c: 434:     PORTAbits.RA4 = 0;
  1336   000B2C  9880               	bcf	128,4,c	;volatile
  1337   000B2E  0012               	return		;funcret
  1338   000B30  FFFF               	dw	65535	; errata NOP
  1339   000B32                     __end_of_lcd_strobeEnableBit:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _lcd_ecrireDonnees *****************
  1343 ;; Defined at:
  1344 ;;		line 105 in file "Lcd4Lignes.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  donnee          1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  donnee          1    1[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1358 ;;      Params:         0       0       0       0       0       0       0
  1359 ;;      Locals:         0       1       0       0       0       0       0
  1360 ;;      Temps:          0       1       0       0       0       0       0
  1361 ;;      Totals:         0       2       0       0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_lcd_wrCom
  1369 ;;		_lcd_wrData
  1370 ;;		_lcd_resetSequence
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text10
  1375   000856                     __ptext10:
  1376                           	callstack 0
  1377   000856                     _lcd_ecrireDonnees:
  1378                           	callstack 0
  1379   000856  FFFF               	dw	65535	; assembler added errata NOP
  1380                           
  1381                           ;incstack = 0
  1382                           ;lcd_ecrireDonnees@donnee stored from wreg
  1383   000858  0100               	movlb	0	; force () banked
  1384   00085A  6FA5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1385   00085C                     
  1386                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  1387   00085C  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1388   000860  0E01               	movlw	1
  1389   000862  0100               	movlb	0	; force () banked
  1390   000864  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1391   000866  5080               	movf	128,w,c	;volatile
  1392   000868  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1393   00086A  0BFE               	andlw	-2
  1394   00086C  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1395   00086E  6E80               	movwf	128,c	;volatile
  1396                           
  1397                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  1398   000870  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1399   000874  90D8               	bcf	status,0,c
  1400   000876  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1401   000878  0E01               	movlw	1
  1402   00087A  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1403   00087C  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1404   00087E  5080               	movf	128,w,c	;volatile
  1405   000880  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1406   000882  0BFD               	andlw	-3
  1407   000884  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1408   000886  6E80               	movwf	128,c	;volatile
  1409                           
  1410                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  1411   000888  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1412   00088C  90D8               	bcf	status,0,c
  1413   00088E  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1414   000890  90D8               	bcf	status,0,c
  1415   000892  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1416   000894  0E01               	movlw	1
  1417   000896  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1418   000898  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1419   00089A  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1420   00089C  5080               	movf	128,w,c	;volatile
  1421   00089E  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1422   0008A0  0BFB               	andlw	-5
  1423   0008A2  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1424   0008A4  6E80               	movwf	128,c	;volatile
  1425                           
  1426                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  1427   0008A6  C0A5  F0A4         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1428   0008AA  90D8               	bcf	status,0,c
  1429   0008AC  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1430   0008AE  90D8               	bcf	status,0,c
  1431   0008B0  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1432   0008B2  90D8               	bcf	status,0,c
  1433   0008B4  33A4               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  1434   0008B6  0E01               	movlw	1
  1435   0008B8  17A4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1436   0008BA  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1437   0008BC  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1438   0008BE  47A4               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  1439   0008C0  5080               	movf	128,w,c	;volatile
  1440   0008C2  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1441   0008C4  0BF7               	andlw	-9
  1442   0008C6  19A4               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1443   0008C8  6E80               	movwf	128,c	;volatile
  1444   0008CA                     
  1445                           ; BSR set to: 0
  1446   0008CA  0012               	return		;funcret
  1447   0008CC  FFFF               	dw	65535	; errata NOP
  1448   0008CE                     __end_of_lcd_ecrireDonnees:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function _lcd_busy *****************
  1452 ;; Defined at:
  1453 ;;		line 122 in file "Lcd4Lignes.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  adresse         2    2[BANK0 ] int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         0       0       0       0       0       0       0
  1468 ;;      Locals:         0       2       0       0       0       0       0
  1469 ;;      Temps:          0       2       0       0       0       0       0
  1470 ;;      Totals:         0       4       0       0       0       0       0
  1471 ;;Total ram usage:        4 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 2
  1474 ;; This function calls:
  1475 ;;		_lcd_lireDonnees
  1476 ;; This function is called by:
  1477 ;;		_lcd_wrCom
  1478 ;;		_lcd_wrData
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text11
  1483   0008CE                     __ptext11:
  1484                           	callstack 0
  1485   0008CE                     _lcd_busy:
  1486                           	callstack 0
  1487   0008CE  FFFF               	dw	65535	; assembler added errata NOP
  1488   0008D0                     
  1489                           ;Lcd4Lignes.c: 125:     int adresse;;Lcd4Lignes.c: 127:     PORTBbits.RB4 = 0;
  1490   0008D0  9881               	bcf	129,4,c	;volatile
  1491                           
  1492                           ;Lcd4Lignes.c: 128:     PORTAbits.RA5 = 1;
  1493   0008D2  8A80               	bsf	128,5,c	;volatile
  1494   0008D4                     l29:
  1495   0008D4  FFFF               	dw	65535	; assembler added errata NOP
  1496                           
  1497                           ;Lcd4Lignes.c: 131:     {;Lcd4Lignes.c: 132:         PORTAbits.RA4 = 1;
  1498   0008D6  8880               	bsf	128,4,c	;volatile
  1499                           
  1500                           ;Lcd4Lignes.c: 133:         __nop();
  1501   0008D8  F000               	nop	
  1502   0008DA                     
  1503                           ;Lcd4Lignes.c: 134:         adresse = lcd_lireDonnees() << 4;
  1504   0008DA  EC99  F005         	call	_lcd_lireDonnees	;wreg free
  1505   0008DE  0100               	movlb	0	; force () banked
  1506   0008E0  6FA4               	movwf	??_lcd_busy& (0+255),b
  1507   0008E2  6BA5               	clrf	(??_lcd_busy+1)& (0+255),b
  1508   0008E4  3BA4               	swapf	??_lcd_busy& (0+255),f,b
  1509   0008E6  3BA5               	swapf	(??_lcd_busy+1)& (0+255),f,b
  1510   0008E8  0EF0               	movlw	240
  1511   0008EA  17A5               	andwf	(??_lcd_busy+1)& (0+255),f,b
  1512   0008EC  51A4               	movf	??_lcd_busy& (0+255),w,b
  1513   0008EE  0B0F               	andlw	15
  1514   0008F0  13A5               	iorwf	(??_lcd_busy+1)& (0+255),f,b
  1515   0008F2  0EF0               	movlw	240
  1516   0008F4  17A4               	andwf	??_lcd_busy& (0+255),f,b
  1517   0008F6  C0A4  F0A6         	movff	??_lcd_busy,lcd_busy@adresse
  1518   0008FA  C0A5  F0A7         	movff	??_lcd_busy+1,lcd_busy@adresse+1
  1519   0008FE                     
  1520                           ; BSR set to: 0
  1521                           ;Lcd4Lignes.c: 135:         PORTAbits.RA4 = 0;
  1522   0008FE  9880               	bcf	128,4,c	;volatile
  1523   000900                     
  1524                           ; BSR set to: 0
  1525                           ;Lcd4Lignes.c: 136:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1526   000900  D000               	nop2		;2 cycle nop
  1527   000902  D000               	nop2		;2 cycle nop
  1528   000904  D000               	nop2		;2 cycle nop
  1529   000906  D000               	nop2		;2 cycle nop
  1530   000908                     
  1531                           ;Lcd4Lignes.c: 137:         PORTAbits.RA4 = 1;
  1532   000908  8880               	bsf	128,4,c	;volatile
  1533   00090A                     
  1534                           ;Lcd4Lignes.c: 138:         __nop();
  1535   00090A  F000               	nop	
  1536                           
  1537                           ;Lcd4Lignes.c: 139:         adresse |= lcd_lireDonnees();
  1538   00090C  EC99  F005         	call	_lcd_lireDonnees	;wreg free
  1539   000910  0100               	movlb	0	; force () banked
  1540   000912  6FA4               	movwf	??_lcd_busy& (0+255),b
  1541   000914  51A4               	movf	??_lcd_busy& (0+255),w,b
  1542   000916  0100               	movlb	0	; force () banked
  1543   000918  13A6               	iorwf	lcd_busy@adresse& (0+255),f,b
  1544   00091A                     
  1545                           ; BSR set to: 0
  1546                           ;Lcd4Lignes.c: 140:         PORTAbits.RA4 = 0;
  1547   00091A  9880               	bcf	128,4,c	;volatile
  1548   00091C                     
  1549                           ; BSR set to: 0
  1550                           ;Lcd4Lignes.c: 141:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1551   00091C  D000               	nop2		;2 cycle nop
  1552   00091E  D000               	nop2		;2 cycle nop
  1553   000920  D000               	nop2		;2 cycle nop
  1554   000922  D000               	nop2		;2 cycle nop
  1555   000924                     
  1556                           ;Lcd4Lignes.c: 142:     }
  1557   000924  0100               	movlb	0	; force () banked
  1558   000926  BFA6               	btfsc	lcd_busy@adresse& (0+255),7,b
  1559   000928  EF98  F004         	goto	u11
  1560   00092C  EF9B  F004         	goto	u10
  1561   000930                     u11:
  1562   000930  FFFF               	dw	65535	; assembler added errata NOP
  1563   000932  EF6A  F004         	goto	l29
  1564   000936                     u10:
  1565   000936  FFFF               	dw	65535	; assembler added errata NOP
  1566   000938                     
  1567                           ; BSR set to: 0
  1568                           ;Lcd4Lignes.c: 145:     PORTAbits.RA5 = 0;
  1569   000938  9A80               	bcf	128,5,c	;volatile
  1570   00093A                     
  1571                           ; BSR set to: 0
  1572                           ;Lcd4Lignes.c: 146:     return(adresse&0x7f);
  1573   00093A  0100               	movlb	0	; force () banked
  1574   00093C  51A6               	movf	lcd_busy@adresse& (0+255),w,b
  1575   00093E  0B7F               	andlw	127
  1576   000940                     
  1577                           ; BSR set to: 0
  1578   000940  0012               	return		;funcret
  1579   000942  FFFF               	dw	65535	; errata NOP
  1580   000944                     __end_of_lcd_busy:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _lcd_lireDonnees *****************
  1584 ;; Defined at:
  1585 ;;		line 92 in file "Lcd4Lignes.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      unsigned char 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1599 ;;      Params:         0       0       0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_lcd_busy
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text12
  1614   000B32                     __ptext12:
  1615                           	callstack 0
  1616   000B32                     _lcd_lireDonnees:
  1617                           	callstack 0
  1618   000B32  FFFF               	dw	65535	; assembler added errata NOP
  1619   000B34                     
  1620                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  1621   000B34  5080               	movf	128,w,c	;volatile
  1622   000B36  0B0F               	andlw	15
  1623   000B38  0012               	return		;funcret
  1624   000B3A  FFFF               	dw	65535	; errata NOP
  1625   000B3C                     __end_of_lcd_lireDonnees:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _initialisation *****************
  1629 ;; Defined at:
  1630 ;;		line 58 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1644 ;;      Params:         0       0       0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text13
  1659   000ADE                     __ptext13:
  1660                           	callstack 0
  1661   000ADE                     _initialisation:
  1662                           	callstack 0
  1663   000ADE  FFFF               	dw	65535	; assembler added errata NOP
  1664   000AE0                     
  1665                           ;main.c: 60:     TRISD = 0;
  1666   000AE0  0E00               	movlw	0
  1667   000AE2  6E95               	movwf	149,c	;volatile
  1668                           
  1669                           ;main.c: 61:     TRISC = 0;
  1670   000AE4  0E00               	movlw	0
  1671   000AE6  6E94               	movwf	148,c	;volatile
  1672                           
  1673                           ;main.c: 62:     TRISB=1;
  1674   000AE8  0E01               	movlw	1
  1675   000AEA  6E93               	movwf	147,c	;volatile
  1676                           
  1677                           ;main.c: 63:     ADCON1=7;
  1678   000AEC  0E07               	movlw	7
  1679   000AEE  6EC1               	movwf	193,c	;volatile
  1680   000AF0                     
  1681                           ;main.c: 65:     INTCONbits.GIE = 1;
  1682   000AF0  8EF2               	bsf	242,7,c	;volatile
  1683   000AF2                     
  1684                           ;main.c: 67:     INTCONbits.INT0IF = 0;
  1685   000AF2  92F2               	bcf	242,1,c	;volatile
  1686   000AF4                     
  1687                           ;main.c: 68:     INTCONbits.INT0IE = 1;
  1688   000AF4  88F2               	bsf	242,4,c	;volatile
  1689   000AF6                     
  1690                           ;main.c: 69:     INTCON2bits.INTEDG0 = 0;
  1691   000AF6  9CF1               	bcf	241,6,c	;volatile
  1692   000AF8                     
  1693                           ;main.c: 71:     INTCON3bits.INT1IE = 1;
  1694   000AF8  86F0               	bsf	240,3,c	;volatile
  1695   000AFA                     
  1696                           ;main.c: 72:     INTCON3bits.INT1IF = 0;
  1697   000AFA  90F0               	bcf	240,0,c	;volatile
  1698   000AFC                     
  1699                           ;main.c: 73:     INTCON2bits.INTEDG1 = 0;
  1700   000AFC  9AF1               	bcf	241,5,c	;volatile
  1701   000AFE  0012               	return		;funcret
  1702   000B00  FFFF               	dw	65535	; errata NOP
  1703   000B02                     __end_of_initialisation:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _init_serie *****************
  1707 ;; Defined at:
  1708 ;;		line 29 in file "serie_458.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1722 ;;      Params:         0       0       0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0
  1725 ;;      Totals:         0       0       0       0       0       0       0
  1726 ;;Total ram usage:        0 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text14
  1737   000B02                     __ptext14:
  1738                           	callstack 0
  1739   000B02                     _init_serie:
  1740                           	callstack 0
  1741   000B02  FFFF               	dw	65535	; assembler added errata NOP
  1742   000B04                     
  1743                           ;serie_458.c: 32:     TRISCbits.TRISC7=1;
  1744   000B04  8E94               	bsf	148,7,c	;volatile
  1745                           
  1746                           ;serie_458.c: 33:     TRISCbits.TRISC6=1;
  1747   000B06  8C94               	bsf	148,6,c	;volatile
  1748   000B08                     
  1749                           ;serie_458.c: 40:     SPBRG = 25;
  1750   000B08  0E19               	movlw	25
  1751   000B0A  6EAF               	movwf	175,c	;volatile
  1752   000B0C                     
  1753                           ;serie_458.c: 45:     TXSTAbits.BRGH = 0;
  1754   000B0C  94AC               	bcf	172,2,c	;volatile
  1755   000B0E                     
  1756                           ;serie_458.c: 49:     RCSTAbits.SPEN = 1;
  1757   000B0E  8EAB               	bsf	171,7,c	;volatile
  1758   000B10                     
  1759                           ;serie_458.c: 50:     TXSTAbits.SYNC = 0;
  1760   000B10  98AC               	bcf	172,4,c	;volatile
  1761   000B12                     
  1762                           ;serie_458.c: 53:     RCSTAbits.CREN = 1;
  1763   000B12  88AB               	bsf	171,4,c	;volatile
  1764   000B14                     
  1765                           ;serie_458.c: 56:     TXSTAbits.TXEN = 1;
  1766   000B14  8AAC               	bsf	172,5,c	;volatile
  1767   000B16  0012               	return		;funcret
  1768   000B18  FFFF               	dw	65535	; errata NOP
  1769   000B1A                     __end_of_init_serie:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _high_isr *****************
  1773 ;; Defined at:
  1774 ;;		line 22 in file "Interrupt.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		None
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1788 ;;      Params:         0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		Interrupt level 2
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	intcode
  1802   000008                     __pintcode:
  1803                           	callstack 0
  1804   000008                     _high_isr:
  1805                           	callstack 0
  1806   000008  FFFF               	dw	65535	; assembler added errata NOP
  1807                           
  1808                           ;incstack = 0
  1809   00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1810   00000C                     
  1811                           ;Interrupt.c: 24:     if(INTCONbits.INT0IF)
  1812   00000C  A2F2               	btfss	242,1,c	;volatile
  1813   00000E  EF0B  F000         	goto	i2u10_41
  1814   000012  EF0E  F000         	goto	i2u10_40
  1815   000016                     i2u10_41:
  1816   000016  FFFF               	dw	65535	; assembler added errata NOP
  1817   000018  EF10  F000         	goto	i2l150
  1818   00001C                     i2u10_40:
  1819   00001C  FFFF               	dw	65535	; assembler added errata NOP
  1820   00001E                     
  1821                           ;Interrupt.c: 25:     {;Interrupt.c: 28:         INTCONbits.INT0IF = 0;
  1822   00001E  92F2               	bcf	242,1,c	;volatile
  1823   000020                     i2l150:
  1824   000020  FFFF               	dw	65535	; assembler added errata NOP
  1825                           
  1826                           ;Interrupt.c: 31:       if(INTCON3bits.INT1IF)
  1827   000022  A0F0               	btfss	240,0,c	;volatile
  1828   000024  EF16  F000         	goto	i2u11_41
  1829   000028  EF19  F000         	goto	i2u11_40
  1830   00002C                     i2u11_41:
  1831   00002C  FFFF               	dw	65535	; assembler added errata NOP
  1832   00002E  EF1B  F000         	goto	i2l152
  1833   000032                     i2u11_40:
  1834   000032  FFFF               	dw	65535	; assembler added errata NOP
  1835   000034                     
  1836                           ;Interrupt.c: 32:     {;Interrupt.c: 34:         INTCON3bits.INT1IF = 0;
  1837   000034  90F0               	bcf	240,0,c	;volatile
  1838   000036                     i2l152:
  1839   000036  FFFF               	dw	65535	; assembler added errata NOP
  1840   000038  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1841   00003A  0011               	retfie		f
  1842   00003C  FFFF               	dw	65535	; errata NOP
  1843   00003E                     __end_of_high_isr:
  1844                           	callstack 0
  1845                           
  1846                           	psect	param0
  1847   000000                     
  1848                           	psect	temp
  1849   000001                     btemp:
  1850                           	callstack 0
  1851   000001                     	ds	1
  1852   000000                     int$flags	set	btemp
  1853   000000                     wtemp8	set	btemp+1
  1854   000000                     ttemp5	set	btemp+1
  1855   000000                     ttemp6	set	btemp+4
  1856   000000                     ttemp7	set	btemp+8
  1857                           
  1858                           	psect	idloc
  1859                           
  1860                           ;Config register IDLOC0 @ 0x200000
  1861                           ;	unspecified, using default values
  1862   200000                     	org	2097152
  1863   200000  FF                 	db	255
  1864                           
  1865                           ;Config register IDLOC1 @ 0x200001
  1866                           ;	unspecified, using default values
  1867   200001                     	org	2097153
  1868   200001  FF                 	db	255
  1869                           
  1870                           ;Config register IDLOC2 @ 0x200002
  1871                           ;	unspecified, using default values
  1872   200002                     	org	2097154
  1873   200002  FF                 	db	255
  1874                           
  1875                           ;Config register IDLOC3 @ 0x200003
  1876                           ;	unspecified, using default values
  1877   200003                     	org	2097155
  1878   200003  FF                 	db	255
  1879                           
  1880                           ;Config register IDLOC4 @ 0x200004
  1881                           ;	unspecified, using default values
  1882   200004                     	org	2097156
  1883   200004  FF                 	db	255
  1884                           
  1885                           ;Config register IDLOC5 @ 0x200005
  1886                           ;	unspecified, using default values
  1887   200005                     	org	2097157
  1888   200005  FF                 	db	255
  1889                           
  1890                           ;Config register IDLOC6 @ 0x200006
  1891                           ;	unspecified, using default values
  1892   200006                     	org	2097158
  1893   200006  FF                 	db	255
  1894                           
  1895                           ;Config register IDLOC7 @ 0x200007
  1896                           ;	unspecified, using default values
  1897   200007                     	org	2097159
  1898   200007  FF                 	db	255
  1899                           
  1900                           	psect	config
  1901                           
  1902                           ; Padding undefined space
  1903   300000                     	org	3145728
  1904   300000  FF                 	db	255
  1905                           
  1906                           ;Config register CONFIG1H @ 0x300001
  1907                           ;	Oscillator Selection bits
  1908                           ;	OSC = HS, HS oscillator
  1909                           ;	Oscillator System Clock Switch Enable bit
  1910                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  1911   300001                     	org	3145729
  1912   300001  22                 	db	34
  1913                           
  1914                           ;Config register CONFIG2L @ 0x300002
  1915                           ;	Power-up Timer Enable bit
  1916                           ;	PWRT = OFF, PWRT disabled
  1917                           ;	Brown-out Reset Enable bit
  1918                           ;	BOR = OFF, Brown-out Reset disabled
  1919                           ;	Brown-out Reset Voltage bits
  1920                           ;	BORV = 25, VBOR set to 2.5V
  1921   300002                     	org	3145730
  1922   300002  0D                 	db	13
  1923                           
  1924                           ;Config register CONFIG2H @ 0x300003
  1925                           ;	Watchdog Timer Enable bit
  1926                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1927                           ;	Watchdog Timer Postscale Select bits
  1928                           ;	WDTPS = 128, 1:128
  1929   300003                     	org	3145731
  1930   300003  0E                 	db	14
  1931                           
  1932                           ;Config register CONFIG4L @ 0x300006
  1933                           ;	Stack Full/Underflow Reset Enable bit
  1934                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  1935                           ;	Low-Voltage ICSP Enable bit
  1936                           ;	LVP = OFF, Low-Voltage ICSP disabled
  1937                           ;	Background Debugger Enable bit
  1938                           ;	DEBUG = 0x1, unprogrammed default
  1939   300006                     	org	3145734
  1940   300006  80                 	db	128
  1941                           
  1942                           ; Padding undefined space
  1943   300007                     	org	3145735
  1944   300007  FF                 	db	255
  1945                           
  1946                           ;Config register CONFIG5L @ 0x300008
  1947                           ;	Code Protection bit
  1948                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  1949                           ;	Code Protection bit
  1950                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  1951                           ;	Code Protection bit
  1952                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  1953                           ;	Code Protection bit
  1954                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  1955   300008                     	org	3145736
  1956   300008  0F                 	db	15
  1957                           
  1958                           ;Config register CONFIG5H @ 0x300009
  1959                           ;	Boot Block Code Protection bit
  1960                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  1961                           ;	Data EEPROM Code Protection bit
  1962                           ;	CPD = OFF, Data EEPROM not code protected
  1963   300009                     	org	3145737
  1964   300009  C0                 	db	192
  1965                           
  1966                           ;Config register CONFIG6L @ 0x30000A
  1967                           ;	Write Protection bit
  1968                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  1969                           ;	Write Protection bit
  1970                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  1971                           ;	Write Protection bit
  1972                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  1973                           ;	Write Protection bit
  1974                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  1975   30000A                     	org	3145738
  1976   30000A  0F                 	db	15
  1977                           
  1978                           ;Config register CONFIG6H @ 0x30000B
  1979                           ;	Configuration Register Write Protection bit
  1980                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  1981                           ;	Boot Block Write Protection bit
  1982                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  1983                           ;	Data EEPROM Write Protection bit
  1984                           ;	WRTD = OFF, Data EEPROM not write protected
  1985   30000B                     	org	3145739
  1986   30000B  E0                 	db	224
  1987                           
  1988                           ;Config register CONFIG7L @ 0x30000C
  1989                           ;	Table Read Protection bit
  1990                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  1991                           ;	Table Read Protection bit
  1992                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  1993                           ;	Table Read Protection bit
  1994                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  1995                           ;	Table Read Protection bit
  1996                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  1997   30000C                     	org	3145740
  1998   30000C  0F                 	db	15
  1999                           
  2000                           ;Config register CONFIG7H @ 0x30000D
  2001                           ;	Boot Block Table Read Protection bit
  2002                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  2003   30000D                     	org	3145741
  2004   30000D  40                 	db	64
  2005                           tosu	equ	0xFFF
  2006                           tosh	equ	0xFFE
  2007                           tosl	equ	0xFFD
  2008                           stkptr	equ	0xFFC
  2009                           pclatu	equ	0xFFB
  2010                           pclath	equ	0xFFA
  2011                           pcl	equ	0xFF9
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           prodh	equ	0xFF4
  2017                           prodl	equ	0xFF3
  2018                           indf0	equ	0xFEF
  2019                           postinc0	equ	0xFEE
  2020                           postdec0	equ	0xFED
  2021                           preinc0	equ	0xFEC
  2022                           plusw0	equ	0xFEB
  2023                           fsr0h	equ	0xFEA
  2024                           fsr0l	equ	0xFE9
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           postinc1	equ	0xFE6
  2028                           postdec1	equ	0xFE5
  2029                           preinc1	equ	0xFE4
  2030                           plusw1	equ	0xFE3
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           bsr	equ	0xFE0
  2034                           indf2	equ	0xFDF
  2035                           postinc2	equ	0xFDE
  2036                           postdec2	equ	0xFDD
  2037                           preinc2	equ	0xFDC
  2038                           plusw2	equ	0xFDB
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    11
    Data        68
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     15      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 11
		 -> msg(CODE[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1186
                         _init_serie
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     466
                                             10 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     300
                                              6 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     720
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      60
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     510
                                              6 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     120
                                              4 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     150
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     150
                                              4 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      60
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             4     4      0      30
                                              0 BANK0      4     4      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serie
   _initialisation
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
       _lcd_wrData
         _lcd_busy
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
       _lcd_wrData

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      17        0.0%
BANK4              100      0       0       7        0.0%
BITBANK3           100      0       0      16        0.0%
BANK3              100      0       0       6        0.0%
BITBANK2           100      0       0      15        0.0%
BANK2              100      0       0       5        0.0%
BITBANK1           100      0       0      14        0.0%
BANK1              100      0       0       4        0.0%
BITBANK5            EF      0       0      18        0.0%
BANK5               EF      0       0       8        0.0%
BITBANK0            A0      0       0      13        0.0%
BANK0               A0      F      59       3       55.6%
BITBIGSFRl          80      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITBIGSFR_1h        12      0       0      20        0.0%
BITBIGSFR_1lh       11      0       0      21        0.0%
BITBIGSFRhl         10      0       0      25        0.0%
BITBIGSFR_1lllh      C      0       0      22        0.0%
BITBIGSFR_5h         9      0       0       9        0.0%
BITBIGSFRhhh         6      0       0      24        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_4          3      0       0      10        0.0%
BITBIGSFR_3          3      0       0      11        0.0%
BITBIGSFR_1llll      1      0       0      23        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59      12        0.0%
DATA                 0      0      59      28        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 17:12:02 2023

                                              l30 0938                                                l23 0B38  
                                              l31 0940                                                l40 0A06  
                                              l26 08CA                                                l43 09AE  
                                              l52 0B22                                                l29 08D4  
                                              l37 075C                                                l46 0AB4  
                                              l84 07D8                                                l78 0850  
                                              l97 06C0                                                u10 0936  
                                              u11 0930                                                u20 071C  
                                              u21 0716                                                u30 0734  
                                              u31 072E                                                u40 0630  
                                              u41 062A                                                u50 0652  
                                              u51 064C                                                u60 06A0  
                                              u61 069A                                                u70 06BA  
                                              u71 06B4                                               l100 0B2E  
                                             l141 0AFE                                               l135 0AD4  
                                             l136 0AD6                                               l169 0B16  
                                             l901 0B28                                               l911 06DC  
                                             l903 06CA                                               l921 06FC  
                                             l913 06DE                                               l905 06CE  
                                             l931 074A                                               l923 0700  
                                             l915 06E8                                               l907 06D2  
                                             l933 0750                                               l925 0708  
                                             l917 06EC                                               l909 06DA  
                                             l941 09BC                                               l935 0758  
                                             l927 071E                                               l919 06F4  
                                             l951 09D6                                               l943 09C0  
                                             l873 0B34                                               l881 08DA  
                                             l929 0734                                               l961 09F6  
                                             l953 09DA                                               l945 09C8  
                                             l891 091A                                               l883 08FE  
                                             l963 09FA                                               l955 09E2  
                                             l947 09CA                                               l939 09B8  
                                             l971 094A                                               l893 091C  
                                             l885 0900                                               l877 085C  
                                             l957 09EA                                               l949 09CC  
                                             l981 096C                                               l973 095E  
                                             l895 0924                                               l887 0908  
                                             l879 08D0                                               l967 0B1C  
                                             l959 09EE                                               l991 098C  
                                             l983 0974                                               l975 0960  
                                             l897 093A                                               l889 090A  
                                             l993 0990                                               l985 097A  
                                             l977 0962                                               l969 0946  
                                             l995 0998                                               l987 097E  
                                             l979 0968                                               l997 099E  
                                             l989 0986                                               l999 09A2  
                                             u207 0980                                               u217 0992  
                                             u170 07D6                                               u227 09A4  
                                             u171 07D0                                               u237 0702  
                                             u247 073E                                               u187 0952  
                                             u197 096E                                               _msg 0601  
                                             prod 000FF3                                               wreg 000FE8  
                                            l1001 09AA                                              l1011 0636  
                                            l1003 0610                                              l1101 0AF4  
                                            l1021 068C                                              l1013 063E  
                                            l1005 0616                                              l1111 0B04  
                                            l1103 0AF6                                              l1023 06A0  
                                            l1007 061C                                              l1031 07F2  
                                            l1121 0B12                                              l1113 0B08  
                                            l1105 0AF8                                              l1025 06A6  
                                            l1017 0658                                              l1033 07FE  
                                            l1201 0AC6                                              l1123 0B14  
                                            l1115 0B0C                                              l1107 0AFA  
                                            l1019 0688                                              l1027 06BA  
                                            l1051 0A98                                              l1035 080A  
                                            l1117 0B0E                                              l1109 0AFC  
                                            l1053 0A9E                                              l1045 0A88  
                                            l1029 07E2                                              l1119 0B10  
                                            l1055 0AA4                                              l1047 0A8E  
                                            l1223 0830                                              l1039 0816  
                                            l1057 0AAA                                              l1049 0A92  
                                            l1059 0AB0                                              l1095 0AE0  
                                            l1191 076C                                              l1097 0AF0  
                                            l1193 0798                                              l1099 0AF2  
                                            l1195 079C                                              l1189 0762  
                                            l1197 0AB8                                              l1199 0AC2  
                                            _RCIF 007CF5                                  ??_initialisation 00A4  
                                            _main 0AB8                                              indf2 000FDF  
                                            fsr1l 000FE1                                              fsr2l 000FD9  
                                            btemp 0001                                              prodl 000FF3  
                                            start 003E                                   ?_lcd_putMessage 00AE  
                                    ___param_bank 000000                                   ??_lcd_ecritChar 00AA  
                                           ?_main 00A4                                             i2l150 0020  
                                           i2l152 0036                                             _RCREG 000FAE  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _TRISA 000F92                                             _TRISB 000F93  
                                           _TRISC 000F94                                             _TRISD 000F95  
                                           _TXREG 000FAD                                   ??_lcd_initCGRam 00AA  
                                           tablat 000FF5                                             ttemp5 0002  
                                           ttemp6 0005                                             ttemp7 0009  
                                           status 000FD8                                             wtemp8 0002  
                                 __initialization 0A4E                                      __end_of_main 0ADE  
                            lcd_putMessage@chaine 00AE                                            ??_main 00B3  
                                   __activetblptr 000003                                            _ADCON1 000FC1  
                                          i2l1141 001E                                            i2l1143 0034  
                                          i2l1139 000C                                    lcd_initCGRam@i 00AC  
                                  lcd_initCGRam@j 00AD                                  __end_of_lcd_busy 0944  
                                __end_of_lcd_init 0AB8                                  __end_of_high_isr 003E  
                                          _g_loto 00A0                                            isa$std 000001  
                                    __mediumconst 0000                                            tblptrh 000FF7  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                  _g_indexChiffre 00B7                                 _lcd_resetSequence 0944  
                                      __accesstop 0060                           __end_of__initialization 0A7C  
                             _lcd_strobeEnableBit 0B26                                ?_lcd_resetSequence 00A4  
                                   ___rparam_used 000000                                      __pidataBANK0 0A0A  
                             ??_lcd_resetSequence 00A6                              ?_lcd_strobeEnableBit 00A4  
                       __end_of_lcd_resetSequence 09B2                                 _lcd_ecrireDonnees 0856  
                                      __pbssBANK0 00B3                                  ??_lcd_putMessage 00B0  
                              ?_lcd_ecrireDonnees 00A4                               ??_lcd_ecrireDonnees 00A4  
                           ??_lcd_strobeEnableBit 00A4                                           i2u10_40 001C  
                                         i2u10_41 0016                                           i2u11_40 0032  
                                         i2u11_41 002C                                        _lcd_wrData 09B2  
                       __end_of_lcd_ecrireDonnees 08CE                                         ?_lcd_busy 00A4  
                                       ?_lcd_init 00A4                           lcd_ecrireDonnees@donnee 00A5  
                                       ?_high_isr 00A4                                           __Hparam 0000  
                                         __Lparam 0000                                 __end_of_lcd_wrCom 0760  
                                    __psmallconst 0600                                           __pcinit 0A4E  
                                      _init_serie 0B02                                           __ramtop 0600  
                                         __ptext0 0AB8                                           __ptext1 0760  
                                         __ptext2 07DC                                           __ptext3 0A86  
                                         __ptext4 0944                                           __ptext5 060E  
                                         __ptext6 09B2                                           __ptext7 0B1A  
                                         __ptext8 06C4                                           __ptext9 0B26  
                           __end_of_lcd_ecritChar 0856                                   lcd_busy@adresse 00A6  
                                lcd_ecritChar@car 00AC                                        ??_lcd_busy 00A4  
                                      ??_lcd_init 00AE                                        ??_high_isr 00A4  
                            end_of_initialization 0A7C                             __end_of_lcd_initCGRam 06C4  
                               ??_lcd_lireDonnees 00A4                                         _RCSTAbits 000FAB  
                                         postdec1 000FE5                                           postinc0 000FEE  
                               ??_lcd_curseurHome 00AA                               lcd_ecritChar@posRam 00AD  
                                       _PORTAbits 000F80                                         _PORTBbits 000F81  
                                       _TRISCbits 000F94                                       ?_lcd_wrData 00A4  
                                       _TXSTAbits 000FAC                                       ?_init_serie 00A4  
                             start_initialization 0A4E                                       __end_of_msg 060C  
                                   _g_mesChiffres 00B3                                       __pdataBANK0 0060  
                                   __pcstackBANK0 00A4                       __end_of_lcd_strobeEnableBit 0B32  
                                       __pintcode 0008                                    _initialisation 0ADE  
                                       _lcd_wrCom 06C4                                       __smallconst 0600  
                                 _lcd_lireDonnees 0B32                               lcd_wrData@caractere 00A8  
                                 _lcd_curseurHome 0B1A                            __end_of_initialisation 0B02  
                                      ?_lcd_wrCom 00A4                                      ??_lcd_wrData 00A8  
                               lcd_wrCom@commande 00A9                                       _INTCON2bits 000FF1  
                                     _INTCON3bits 000FF0                                         copy_data0 0A62  
                                        __Hparam0 0000                                          __Lparam0 0000  
                                 ?_initialisation 00A4                                __end_of_lcd_wrData 0A0A  
                                    ??_init_serie 00A4                                   lcd_putMessage@j 00B2  
                         __end_of_lcd_lireDonnees 0B3C                                          _matCGRAM 0060  
                         __end_of_lcd_curseurHome 0B26                                          __ptext10 0856  
                                        __ptext11 08CE                                          __ptext12 0B32  
                                        __ptext13 0ADE                                          __ptext14 0B02  
                                        _lcd_busy 08CE                                          _lcd_init 0A86  
                                        _high_isr 0008                                __end_of_init_serie 0B1A  
                                        isa$xinst 000000                                          int$flags 0001  
                                     ??_lcd_wrCom 00A8                                     _lcd_ecritChar 07DC  
                                      _INTCONbits 000FF2                                          intlevel2 0B3C  
                                   _lcd_initCGRam 060E                                    _lcd_putMessage 0760  
                                  ?_lcd_ecritChar 00A4                                  ?_lcd_lireDonnees 00A4  
                                ?_lcd_curseurHome 00A4                                    ?_lcd_initCGRam 00A4  
                          __end_of_lcd_putMessage 07DC  
